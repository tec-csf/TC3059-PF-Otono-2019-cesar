{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/DocumentCard/DocumentCard.jsx\";\nimport React, { Component } from 'react';\nimport { FaCheckCircle, FaTrash, FaCommentsDollar } from 'react-icons/fa';\nimport axios from 'axios';\nimport { Spinner, Modal } from 'reactstrap';\nimport Checkbox from './../Checkbox/Checkbox';\nimport InputForm from '../InputForm/InputForm';\nimport { ButtonOutline } from '../Button/Button';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst moralCopy = {\n  addrres: '',\n  activities: '',\n  business_name: '',\n  cap_reg: '',\n  last_update: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  first_op: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  rfc: '',\n  status: '',\n  tradename: '',\n  entities: []\n};\nconst checkedCopy = [false, false, false, false, false];\nconst options = [{\n  value: 'H',\n  label: 'H'\n}, {\n  value: 'M',\n  label: 'M'\n}];\n\nclass DocumentCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this._setState = state => {\n      this.setState(state);\n    };\n\n    this.loadFileToBase64 = event => {\n      let file;\n\n      try {\n        file = event.target.files[0];\n      } catch {\n        file = event;\n      }\n\n      let pdf = file.type === 'application/pdf';\n      this.setState({\n        image_event: file\n      });\n\n      if (file.size < 14400 && !pdf) {\n        // alert('Por favor suba una imagen con dimensiones mayores a 120 x 120')\n        this.props.setState({\n          modal: !this.props.params.modal,\n          active: this.state.comp_id\n        });\n      } else if (this.state.doc_up) {\n        // alert('Por favor borre el documento antes de subir otro')\n        this.props.setState({\n          modal_up: !this.props.params.modal_up,\n          active: this.state.comp_id\n        });\n      } else {\n        this.reader = new FileReader();\n        this.reader.readAsDataURL(file);\n\n        this.reader.onloadend = () => {\n          var image = new FormData();\n\n          if (this.props.params.per_type === 'fisica') {\n            image.append('image', file);\n            image.append('pdf', pdf);\n          } else if (this.props.params.per_type === 'afore') {\n            if (file.name.endsWith('.mp4')) {\n              image.append('video', file);\n              this.setState({\n                type_file: 'video'\n              });\n            } else {\n              image.append('image', file);\n              this.setState({\n                type_file: 'image'\n              });\n            }\n          } else {\n            image.append('pdf', file);\n          }\n\n          if (this.props.params.per_type === 'afore') {\n            this.setState({\n              file: image,\n              doc_up: true,\n              pdf,\n              image: this.reader.result\n            }, () => {\n              if (file.name.endsWith('.mp4')) {\n                this.props.setState({\n                  video: file\n                });\n              } else {\n                this.props.setState({\n                  image: file\n                });\n              }\n            });\n          } else {\n            this.setState({\n              file: image,\n              doc_up: true,\n              pdf,\n              spinner: '',\n              image: this.reader.result\n            }, () => {\n              this.uploadFile();\n            });\n          }\n        };\n      }\n    };\n\n    this.uploadFile = () => {\n      if (localStorage.getItem(\"id_token\")) {\n        let url; // let res\n\n        if (this.props.params.per_type === 'fisica') {\n          url = API_URL + '/api/v1/get_url/search';\n        } else if (this.props.params.per_type === 'moral') {\n          url = API_URL + '/api/v1/read_acts/search';\n        }\n\n        axios({\n          method: 'POST',\n          url,\n          data: this.state.file,\n          config: {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        }).then(res => {\n          this.setState({\n            spinner: 'd-none',\n            comp_name: true\n          });\n\n          if (this.props.params.per_type === 'fisica') {\n            let type_img = res['data']['type_img'];\n            let data = res['data']['data_text'];\n\n            if (data === 'Documento no identificado') {\n              this.inputRef.current.value = \"\";\n              this.setState({\n                doc_up: false\n              }, () => {\n                this.props.setState({\n                  modal: !this.props.params.modal\n                });\n              });\n            } else if (data === 'Documento en mala posicion') {\n              this.inputRef.current.value = \"\";\n              this.setState({\n                doc_up: false\n              }, () => {\n                this.props.setState({\n                  modal_pos: !this.props.params.modal_pos\n                });\n              });\n            } else if (type_img === this.props.params.up_1 || type_img === this.props.params.up_2) {\n              this.inputRef.current.value = \"\";\n              this.deleteForm();\n              this.deleteDoc();\n              this.props.setState({\n                modal_del: !this.props.params.modal_del\n              });\n            } else {\n              const birthdate = data['birthdate'];\n              const address = data['address']; // Check type of document\n\n              var index;\n\n              if (res['data']['type_img'] === 'ine') {\n                index = 0;\n              } else if (res['data']['type_img'] === 'licencia') {\n                index = 1;\n              } else {\n                index = 2;\n              } // Set checked document\n\n\n              const copyChecked = [];\n              copyChecked.concat(checkedCopy);\n              copyChecked[index] = true; // Set user info\n\n              this.setState({\n                user: {\n                  name: data['name']['first_name'],\n                  first_surname: data['name']['first_surname'],\n                  second_surname: data['name']['second_surname'],\n                  birthdate: birthdate[0] + \"-\" + birthdate[1] + \"-\" + birthdate[2],\n                  gender: data['sex'],\n                  curp: data['curp'],\n                  city: address['city'],\n                  colony: address['colony'],\n                  state: address['state'],\n                  street: address['street'],\n                  clave: data['id_card']\n                },\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick();\n\n                if (this.state.comp_id === 0) {\n                  this.props.checkContinue(this.state.user);\n                  this.props.setState({\n                    img_1: res['data']['img_name'],\n                    name_1: this.state.user.name,\n                    first_surname_1: this.state.user.first_surname,\n                    second_surname_1: this.state.user.second_surname,\n                    birthdate_1: this.state.user.birthdate,\n                    curp_1: this.state.user.curp,\n                    up_1: type_img,\n                    clave_1: this.state.user.clave,\n                    gender_1: this.state.user.gender,\n                    city_1: this.state.user.city,\n                    colony_1: this.state.user.colony,\n                    state_1: this.state.user.state,\n                    street_1: this.state.user.street,\n                    comp: true,\n                    comp_name: true,\n                    comp_surname1: true,\n                    comp_surname2: true,\n                    comp_birth: true,\n                    comp_city: true,\n                    comp_colony: true,\n                    comp_state: true,\n                    comp_street: true,\n                    comp_gender: true,\n                    comp_clave: true,\n                    comp_curp: true\n                  });\n                } else if (this.state.comp_id === 1) {\n                  this.props.setState({\n                    img_2: res['data']['img_name'],\n                    name_2: this.state.user.name,\n                    first_surname_2: this.state.user.first_surname,\n                    second_surname_2: this.state.user.second_surname,\n                    birthdate_2: this.state.user.birthdate,\n                    curp_2: this.state.user.curp,\n                    up_2: type_img,\n                    clave_2: this.state.user.clave,\n                    gender_2: this.state.user.gender,\n                    city_2: this.state.user.city,\n                    colony_2: this.state.user.colony,\n                    state_2: this.state.user.state,\n                    street_2: this.state.user.street,\n                    comp_name: true,\n                    comp_surname1: true,\n                    comp_surname2: true,\n                    comp_birth: true,\n                    comp_city: true,\n                    comp_colony: true,\n                    comp_state: true,\n                    comp_street: true,\n                    comp_gender: true,\n                    comp_clave: true,\n                    comp_curp: true\n                  });\n                }\n              });\n            }\n          } else {\n            let data = res['data'];\n            let doc_type = data['type'];\n            this.setState({\n              doc_type\n            });\n\n            if (this.props.params.last_moral_up === doc_type) {\n              alert('Hay que subir un archivo diferente la anterior');\n              this.setState({\n                doc_up: false\n              });\n            } else {\n              this.props.setState({\n                last_moral_up: doc_type\n              });\n\n              if (doc_type === 'acta') {\n                const copyChecked = [];\n                copyChecked.concat(checkedCopy);\n                copyChecked[3] = true;\n                const data_length = data['entities'].length;\n                let entities_json = [];\n\n                for (let i = 0; i < data_length; i++) {\n                  let entity = [data['entities'][i], '', false];\n                  entities_json.push(entity);\n                }\n\n                this.setState({\n                  entities: entities_json,\n                  checked: copyChecked,\n                  disabled: false,\n                  num_activ: '-active'\n                }, () => {\n                  this.onClick();\n                });\n              } else {\n                const copyChecked = [];\n                copyChecked.concat(checkedCopy);\n                copyChecked[4] = true;\n                this.setState({\n                  moral: {\n                    activities: data['activities'][0]['activity'],\n                    address: {\n                      city: data['address']['city'],\n                      colony: data['address']['colony'],\n                      state: data['address']['state'],\n                      street: data['address']['street'],\n                      zip: data['address']['zip']\n                    },\n                    business_name: data['business_name'],\n                    cap_reg: data['capital_regime'],\n                    last_update: data['last_date_of_change'],\n                    rfc: data['rfc'],\n                    first_op: data['start_date_of_operations'],\n                    status: data['status'],\n                    tradename: data['tradename']\n                  },\n                  checked: copyChecked,\n                  disabled: false,\n                  num_activ: '-active'\n                }, () => {\n                  this.onClick();\n                  this.props.setState({\n                    moral: {\n                      activities: data['activities'][0]['activity'],\n                      address: {\n                        city: data['address']['city'],\n                        colony: data['address']['colony'],\n                        state: data['address']['state'],\n                        street: data['address']['street'],\n                        zip: data['address']['zip']\n                      },\n                      business_name: data['business_name'],\n                      cap_reg: data['capital_regime'],\n                      last_update: data['last_date_of_change'],\n                      rfc: data['rfc'],\n                      first_op: data['start_date_of_operations'],\n                      status: data['status'],\n                      tradename: data['tradename']\n                    }\n                  });\n                });\n              }\n            }\n          }\n        });\n      } else {\n        alert('Token error');\n      }\n    };\n\n    this.onClick = () => {\n      this.setState({\n        info: true,\n        spinner: 'd-none'\n      });\n    };\n\n    this.saveData = () => {\n      let entities_true = [];\n      this.state.entities.forEach(function (element) {\n        if (element[2]) {\n          entities_true.push(element);\n        }\n      });\n      this.props.setState({\n        entities: entities_true\n      });\n    };\n\n    this.deleteDoc = () => {\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            up_1: ''\n          });\n        } else {\n          this.props.setState({\n            up_2: ''\n          });\n        }\n      });\n\n      if (this.props.params.per_type == 'afore') {\n        if (this.state.comp_id == 1) {\n          this.props.setState({\n            video: '',\n            error: '',\n            afore: {\n              identity_verified: '',\n              name_verified: '',\n              organization_destiny: '',\n              organization_origin: '',\n              name_ine: '',\n              name_video: ''\n            }\n          });\n        } else {\n          this.props.setState({\n            image: '',\n            error: '',\n            afore: {\n              identity_verified: '',\n              name_verified: '',\n              organization_destiny: '',\n              organization_origin: '',\n              name_ine: '',\n              name_video: ''\n            }\n          });\n        }\n      }\n\n      this.inputRef.current.value = \"\";\n      this.deleteForm();\n    };\n\n    this.deleteForm = () => {\n      this.setState({\n        user: {\n          name: '',\n          first_surname: '',\n          second_surname: '',\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          gender: '',\n          clave: '',\n          curp: '',\n          birthdate: ''\n        },\n        moral: moralCopy,\n        disabled: true\n      }, () => {\n        if (this.state.comp_id === 0 && this.props.params.per_type === 'fisica') {\n          this.props.setState({\n            comp: true,\n            continue: 'disabled',\n            img_1: '',\n            up_1: '',\n            curp_1: '',\n            name_1: '',\n            first_surname_1: '',\n            second_surname_1: '',\n            birthdate_1: '',\n            gender_1: '',\n            city_1: '',\n            colony_1: '',\n            state_1: '',\n            street_1: '',\n            comp_name: true,\n            comp_surname1: true,\n            comp_surname2: true,\n            comp_birth: true,\n            comp_city: true,\n            comp_colony: true,\n            comp_state: true,\n            comp_street: true,\n            comp_gender: true,\n            comp_clave: true,\n            comp_curp: true\n          });\n        } else if (this.state.comp_id === 1 && this.props.params.per_type === 'fisica') {\n          this.props.setState({\n            comp: true,\n            img_2: '',\n            up_2: '',\n            curp_2: '',\n            name_2: '',\n            first_surname_2: '',\n            second_surname_2: '',\n            birthdate_2: '',\n            gender_2: '',\n            city_2: '',\n            colony_2: '',\n            state_2: '',\n            street_2: '',\n            comp_name: true,\n            comp_surname1: true,\n            comp_surname2: true,\n            comp_birth: true,\n            comp_city: true,\n            comp_colony: true,\n            comp_state: true,\n            comp_street: true,\n            comp_gender: true,\n            comp_clave: true,\n            comp_curp: true\n          });\n        } else {\n          this.props.setState({\n            last_moral_up: ''\n          });\n        }\n      });\n    };\n\n    this.handlerName = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['business_name'] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerCity = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"city\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerColony = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"colony\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerState = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"state\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerStreet = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"street\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerActivities = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"activities\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerRFC = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"rfc\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerStatus = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"status\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerTradename = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"tradename\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerCapReg = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"cap_reg\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegDay = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][0] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegMonth = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][1] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegYear = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][2] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegDay = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][0] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegMonth = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][1] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegYear = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][2] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerPerName = event => {\n      let temp_user = this.state.user;\n      temp_user['name'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            name_1: this.state.user.name,\n            comp_name: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            name_2: this.state.user.name,\n            comp_name: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerFisrSurname = event => {\n      let temp_user = this.state.user;\n      temp_user['first_surname'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            first_surname_1: this.state.user.first_surname,\n            comp_surname1: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            first_surname_2: this.state.user.first_surname,\n            comp_surname1: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerSecondSurname = event => {\n      let temp_user = this.state.user;\n      temp_user['second_surname'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            second_surname_1: this.state.user.second_surname,\n            comp_surname2: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            second_surname_2: this.state.user.second_surname,\n            comp_surname2: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerBirth = event => {\n      let temp_user = this.state.user;\n      temp_user['birthdate'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            birthdate_1: this.state.user.birthdate,\n            comp_birth: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            birthdate_2: this.state.user.birthdate,\n            comp_birth: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerCity = event => {\n      let temp_user = this.state.user;\n      temp_user['city'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            city_1: this.state.user.city,\n            comp_city: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            city_2: this.state.user.city,\n            comp_city: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerColony = event => {\n      let temp_user = this.state.user;\n      temp_user['colony'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            colony_1: this.state.user.colony,\n            comp_colony: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            colony_2: this.state.user.colony,\n            comp_colony: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerState = event => {\n      let temp_user = this.state.user;\n      temp_user['state'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            state_1: this.state.user.state,\n            comp_state: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            state_2: this.state.user.state,\n            comp_state: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerStreet = event => {\n      let temp_user = this.state.user;\n      temp_user['street'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            street_1: this.state.user.street,\n            comp_street: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            street_2: this.state.user.street,\n            comp_street: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerGender = event => {\n      let temp_user = this.state.user;\n      temp_user['gender'] = event.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            gender_1: this.state.user.gender,\n            comp_gender: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            gender_2: this.state.user.gender,\n            comp_gender: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerClave = event => {\n      let temp_user = this.state.user;\n      temp_user['clave'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            clave_1: this.state.user.clave,\n            comp_clave: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            clave_2: this.state.user.clave,\n            comp_clave: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerCURP = event => {\n      let temp_user = this.state.user;\n      temp_user['curp'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            curp_1: this.state.user.curp,\n            comp_curp: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            curp_2: this.state.user.curp,\n            comp_curp: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        image_open: !prevState.image_open\n      }));\n    };\n\n    this.checkCard = this.checkCard.bind(this);\n    this.inputRef = React.createRef();\n    this.state = {\n      image_event: '',\n      checkEntities: true,\n      image: '',\n      image_open: false,\n      spinner: 'd-none',\n      doc_type: '',\n      disabled: true,\n      num_activ: '',\n      doc_up: false,\n      comp_id: 0,\n      type_file: '',\n      checked: [false, false, false, false, false],\n      documentsList: [{\n        image: '-ife',\n        documentType: 'INE'\n      }, {\n        image: '-license',\n        documentType: 'Licencia'\n      }, {\n        image: '-passport',\n        documentType: 'Pasaporte'\n      }, {\n        image: '-acta',\n        documentType: 'Acta'\n      }, {\n        image: '-rfc',\n        documentType: 'RFC'\n      }, {\n        image: '-video',\n        documentType: 'video'\n      }],\n      file: '',\n      pdf: false,\n      info: false,\n      // Data for physical person\n      user: {\n        name: '',\n        first_surname: '',\n        second_surname: '',\n        city: '',\n        colony: '',\n        state: '',\n        street: '',\n        gender: '',\n        clave: '',\n        curp: '',\n        birthdate: ''\n      },\n      // Data for moral person\n      moral: {\n        addrres: {\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          zip: ''\n        },\n        activities: '',\n        business_name: '',\n        cap_reg: '',\n        last_update: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        first_op: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        rfc: '',\n        status: '',\n        tradename: ''\n      },\n      entities: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      comp_id: this.props.id\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.params.replace && this.props.params.active === this.state.comp_id) {\n      this.props.setState({\n        replace: false,\n        comp_name: true,\n        comp_surname1: true,\n        comp_surname2: true,\n        comp_birth: true,\n        comp_city: true,\n        comp_colony: true,\n        comp_state: true,\n        comp_street: true,\n        comp_gender: true,\n        comp_clave: true,\n        comp_curp: true\n      });\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      }, () => {\n        this.loadFileToBase64(this.state.image_event);\n      });\n    }\n  } // Obtener archivo de identificación\n\n\n  checkCard(index) {\n    const checked = this.state.checked.map((checkbox, i) => {\n      if (i === index) {\n        return !checkbox;\n      } else {\n        return false;\n      }\n    });\n    this.setState({\n      checked\n    });\n  }\n\n  render() {\n    const user = this.state.user;\n    const moral = this.state.moral;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.image_open,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.image,\n      height: \"100%\",\n      width: \"100%\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"document-card \".concat(this.props.customClasses),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinnermodal \" + this.state.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '2rem',\n        height: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }), ' '), this.state.image !== '' && React.createElement(\"div\", {\n      className: \"datawrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteDoc,\n      className: \"fa-btn ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942\n      },\n      __self: this\n    }, this.props.params.per_type === 'afore' && this.state.comp_id == 0 && this.props.params.image != '' && React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943\n      },\n      __self: this\n    }), this.props.params.per_type === 'afore' && this.state.comp_id == 1 && this.props.params.video != '' && React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944\n      },\n      __self: this\n    }), this.props.params.per_type !== 'afore' && React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945\n      },\n      __self: this\n    }))), this.props.params.per_type === 'afore' && React.createElement(\"p\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }, this.state.comp_id == 0 ? 'INE' : 'Vídeo'), React.createElement(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950\n      },\n      __self: this\n    }, \"Sube tu archivo a reconocer, puede ser \", this.props.params.per_type === 'fisica' && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950\n      },\n      __self: this\n    }, \" INE, IFE, Licencia o Pasaporte\"), this.props.params.per_type === 'moral' && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951\n      },\n      __self: this\n    }, \" Acta Constitutiva o RFC\"), this.props.params.per_type === 'afore' && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, this.state.comp_id == 0 ? '.jpg, .jpeg o .png' : '.mp4')), this.props.params.per_type !== 'afore' && React.createElement(\"input\", {\n      onChange: this.loadFileToBase64,\n      ref: this.inputRef,\n      type: \"file\",\n      accept: \".jpg, .jpeg, .png, .pdf\",\n      className: \"select-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953\n      },\n      __self: this\n    }), this.props.params.per_type === 'afore' && React.createElement(\"input\", {\n      onChange: this.loadFileToBase64,\n      ref: this.inputRef,\n      type: \"file\",\n      accept: this.props.params.per_type === 'afore' && this.state.comp_id == 0 ? '.jpg, .jpeg, .png, .pdf' : '.mp4',\n      className: \"select-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"select-document-form flex-column flex-md-row mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, this.state.documentsList.map((type, index) => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961\n        },\n        __self: this\n      }, this.state.checked[index] && React.createElement(\"div\", {\n        key: \"document-card-\".concat(index, \"-\").concat(this.state.comp_id),\n        className: \"documentwrapper \".concat(this.state.checked[index] ? '-selected' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        checked: this.state.checked[index],\n        onChange: () => this.checkCard(index),\n        className: \"radio\",\n        type: \"checkbox\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966\n        },\n        __self: this\n      }, React.createElement(FaCheckCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"documenttype \".concat(type.image),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971\n        },\n        __self: this\n      }, type.documentType)));\n    }), !this.state.pdf && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }, this.state.doc_up && React.createElement(\"div\", {\n      style: {\n        marginRight: \"80px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, \"Abrir vista previa\")), this.state.type_file == 'video' ? React.createElement(\"i\", {\n      className: \"fas fa-video fs-40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: this.state.image,\n      position: \"center\",\n      className: \"datawrapper flex-column\",\n      height: \"100px\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983\n      },\n      __self: this\n    })))))), this.props.params.per_type != 'afore' && React.createElement(\"div\", {\n      className: \"document-card -light -border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }, this.props.params.per_type === 'fisica' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.name_color,\n      label: \"Nombre(s)*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerName,\n      type: \"text\",\n      value: user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.surname1_color,\n      label: \"Apellido Paterno*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerFisrSurname,\n      type: \"text\",\n      value: user.first_surname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.surname2_color,\n      label: \"Apellido Materno*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerSecondSurname,\n      type: \"text\",\n      value: user.second_surname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.birth_color,\n      label: \"Nacimiento* DD-MM-AAAA\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerBirth,\n      type: \"text\",\n      value: user.birthdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.city_color,\n      label: \"Ciudad\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerCity,\n      type: \"text\",\n      value: user.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.colony_color,\n      label: \"Colonia\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerColony,\n      type: \"text\",\n      value: user.colony,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.state_color,\n      label: \"Estado\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerState,\n      type: \"text\",\n      value: user.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.street_color,\n      label: \"Calle\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerStreet,\n      type: \"text\",\n      value: user.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.gender_color,\n      label: \"Sexo\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerGender,\n      type: \"text\",\n      value: user.gender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.clave_color,\n      label: \"No. identificaci\\xF3n\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerClave,\n      type: \"text\",\n      value: user.clave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.curp_color,\n      label: \"CURP*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCURP,\n      type: \"text\",\n      value: user.curp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    }))), this.props.params.per_type === 'moral' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }, this.state.doc_type === 'acta' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029\n      },\n      __self: this\n    }, this.state.entities.map((entity, index) => {\n      return React.createElement(Checkbox, {\n        onClick: () => {\n          this.toggle();\n        },\n        setState: () => {\n          this._setState();\n        },\n        index: index,\n        value: entity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"col-12 px-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button -outline\",\n      onClick: this.saveData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043\n      },\n      __self: this\n    }, \"GUARDAR\"))), this.state.doc_type === 'rfc' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerName,\n      type: \"text\",\n      label: \"Nombre\",\n      value: moral.business_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCity,\n      type: \"text\",\n      label: \"Ciudad\",\n      value: moral.address.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerColony,\n      type: \"text\",\n      label: \"Colonia\",\n      value: moral.address.colony,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerState,\n      type: \"text\",\n      label: \"Estado\",\n      value: moral.address.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerStreet,\n      type: \"text\",\n      label: \"Calle\",\n      value: moral.address.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerActivities,\n      type: \"text\",\n      label: \"Actividad\",\n      value: moral.activities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerRFC,\n      type: \"text\",\n      label: \"RFC\",\n      value: moral.rfc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerStatus,\n      type: \"text\",\n      label: \"Estado\",\n      value: moral.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerTradename,\n      type: \"text\",\n      label: \"Nombre comercial\",\n      value: moral.tradename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCapReg,\n      type: \"text\",\n      label: \"Regimen de Capital\",\n      value: moral.cap_reg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegDay,\n      type: \"number\",\n      label: \"D\\xEDa\",\n      value: moral.first_op[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegMonth,\n      type: \"number\",\n      label: \"Mes\",\n      value: moral.first_op[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegYear,\n      type: \"number\",\n      label: \"A\\xF1o\",\n      value: moral.first_op[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegDay,\n      type: \"number\",\n      label: \"D\\xEDa\",\n      value: moral.last_update[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegMonth,\n      type: \"number\",\n      label: \"Mes\",\n      value: moral.last_update[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegYear,\n      type: \"number\",\n      label: \"A\\xF1o\",\n      value: moral.last_update[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }, React.createElement(ButtonOutline, {\n      title: \"GUARDAR\",\n      customClass: \"mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default DocumentCard;","map":{"version":3,"sources":["/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/DocumentCard/DocumentCard.jsx"],"names":["React","Component","FaCheckCircle","FaTrash","FaCommentsDollar","axios","Spinner","Modal","Checkbox","InputForm","ButtonOutline","API_URL","process","env","REACT_APP_API_URL","moralCopy","addrres","activities","business_name","cap_reg","last_update","first_op","rfc","status","tradename","entities","checkedCopy","options","value","label","DocumentCard","constructor","props","_setState","state","setState","loadFileToBase64","event","file","target","files","pdf","type","image_event","size","modal","params","active","comp_id","doc_up","modal_up","reader","FileReader","readAsDataURL","onloadend","image","FormData","per_type","append","name","endsWith","type_file","result","video","spinner","uploadFile","localStorage","getItem","url","method","data","config","headers","then","res","comp_name","type_img","inputRef","current","modal_pos","up_1","up_2","deleteForm","deleteDoc","modal_del","birthdate","address","index","copyChecked","concat","user","first_surname","second_surname","gender","curp","city","colony","street","clave","checked","disabled","num_activ","onClick","checkContinue","img_1","name_1","first_surname_1","second_surname_1","birthdate_1","curp_1","clave_1","gender_1","city_1","colony_1","state_1","street_1","comp","comp_surname1","comp_surname2","comp_birth","comp_city","comp_colony","comp_state","comp_street","comp_gender","comp_clave","comp_curp","img_2","name_2","first_surname_2","second_surname_2","birthdate_2","curp_2","clave_2","gender_2","city_2","colony_2","state_2","street_2","doc_type","last_moral_up","alert","data_length","length","entities_json","i","entity","push","moral","zip","info","saveData","entities_true","forEach","element","error","afore","identity_verified","name_verified","organization_destiny","organization_origin","name_ine","name_video","continue","handlerName","temp_moral","handlerCity","handlerColony","handlerState","handlerStreet","handlerActivities","handlerRFC","handlerStatus","handlerTradename","handlerCapReg","handlerDateRegDay","handlerDateRegMonth","handlerDateRegYear","handlerUpdRegDay","handlerUpdRegMonth","handlerUpdRegYear","handlerPerName","temp_user","handlerFisrSurname","handlerSecondSurname","handlerBirth","handlerPerCity","handlerPerColony","handlerPerState","handlerPerStreet","handlerGender","handlerClave","handlerCURP","toggle","prevState","image_open","checkCard","bind","createRef","checkEntities","documentsList","documentType","componentDidMount","id","componentDidUpdate","replace","map","checkbox","render","customClasses","width","height","marginRight","name_color","surname1_color","surname2_color","birth_color","city_color","colony_color","state_color","street_color","gender_color","clave_color","curp_color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  FaCheckCircle,\n  FaTrash,\n  FaCommentsDollar\n} from 'react-icons/fa'\nimport axios from 'axios'\nimport { Spinner, Modal } from 'reactstrap';\nimport Checkbox from './../Checkbox/Checkbox';\nimport InputForm from '../InputForm/InputForm';\nimport { ButtonOutline } from '../Button/Button'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nconst moralCopy = {\n  addrres: '',\n  activities: '',\n  business_name: '',\n  cap_reg: '',\n  last_update: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  first_op: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  rfc: '',\n  status: '',\n  tradename: '',\n  entities: []\n}\nconst checkedCopy = [false, false, false, false, false]\n\nconst options = [\n  { value: 'H', label: 'H' },\n  { value: 'M', label: 'M' },\n]\n\nclass DocumentCard extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.checkCard = this.checkCard.bind(this)\n\n    this.inputRef = React.createRef();\n\n    this.state = {\n      image_event: '',\n      checkEntities: true,\n      image: '',\n      image_open: false,\n      spinner: 'd-none',\n      doc_type: '',\n      disabled: true,\n      num_activ: '',\n      doc_up: false,\n      comp_id: 0,\n      type_file: '',\n      checked: [false, false, false, false, false],\n      documentsList: [{\n        image: '-ife',\n        documentType: 'INE',\n      }, {\n        image: '-license',\n        documentType: 'Licencia',\n      }, {\n        image: '-passport',\n        documentType: 'Pasaporte'\n      }, {\n        image: '-acta',\n        documentType: 'Acta',\n      }, {\n        image: '-rfc',\n        documentType: 'RFC'\n      }, {\n        image: '-video',\n        documentType: 'video'\n      }],\n      file: '',\n      pdf: false,\n      info: false,\n      // Data for physical person\n      user: {\n        name: '',\n        first_surname: '',\n        second_surname: '',\n        city: '',\n        colony: '',\n        state: '',\n        street: '',\n        gender: '',\n        clave: '',\n        curp: '',\n        birthdate: ''\n      },\n      // Data for moral person\n      moral: {\n        addrres: {\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          zip: ''\n        },\n        activities: '',\n        business_name: '',\n        cap_reg: '',\n        last_update: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        first_op: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        rfc: '',\n        status: '',\n        tradename: ''\n      },\n      entities: []\n    }\n  }\n\n  _setState = (state) => {\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    this.setState({ comp_id: this.props.id })\n  }\n\n  componentDidUpdate() {\n    if (this.props.params.replace && this.props.params.active === this.state.comp_id) {\n      this.props.setState({ \n        replace: false,\n        comp_name: true,\n        comp_surname1: true,\n        comp_surname2: true,\n        comp_birth: true,\n        comp_city: true,\n        comp_colony: true,\n        comp_state: true,\n        comp_street: true,\n        comp_gender: true,\n        comp_clave: true,\n        comp_curp: true, \n      })\n\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      }, () => {\n        this.loadFileToBase64(this.state.image_event)\n\n      })\n    }\n  }\n\n  // Obtener archivo de identificación\n  loadFileToBase64 = (event) => {\n\n    let file\n    try {\n      file = event.target.files[0];\n    } catch {\n      file = event\n    }\n    let pdf = file.type === 'application/pdf'\n\n    this.setState({ image_event: file })\n\n\n    if (file.size < 14400 && !pdf) {\n      // alert('Por favor suba una imagen con dimensiones mayores a 120 x 120')\n      this.props.setState({\n        modal: !this.props.params.modal,\n        active: this.state.comp_id\n      })\n    }\n    else if (this.state.doc_up) {\n      // alert('Por favor borre el documento antes de subir otro')\n\n      this.props.setState({\n        modal_up: !this.props.params.modal_up,\n        active: this.state.comp_id\n      })\n    }\n    else {\n      this.reader = new FileReader();\n      this.reader.readAsDataURL(file);\n      this.reader.onloadend = () => {\n        var image = new FormData()\n\n        if (this.props.params.per_type === 'fisica') {\n          image.append('image', file)\n          image.append('pdf', pdf)\n        }\n        else if (this.props.params.per_type === 'afore') {\n          if (file.name.endsWith('.mp4')) {\n            image.append('video', file)\n            this.setState({\n              type_file: 'video'\n            })\n          }\n          else {\n            image.append('image', file)\n            this.setState({\n              type_file: 'image'\n            })\n          }\n        }\n        else {\n          image.append('pdf', file)\n        }\n        if (this.props.params.per_type === 'afore') {\n          this.setState({\n            file: image,\n            doc_up: true,\n            pdf,\n            image: this.reader.result\n          }, () => {\n            if (file.name.endsWith('.mp4')) {\n              this.props.setState({\n                video: file\n              })\n            }\n            else {\n              this.props.setState({\n                image: file\n              })\n            }\n          });\n        }\n        else {\n          this.setState({\n            file: image,\n            doc_up: true,\n            pdf,\n            spinner: '',\n            image: this.reader.result\n\n          }, () => {\n            this.uploadFile();\n          });\n        }\n      }\n    }\n  }\n\n  uploadFile = () => {\n\n    if (localStorage.getItem(\"id_token\")) {\n\n      let url\n      // let res\n\n      if (this.props.params.per_type === 'fisica') {\n        url = API_URL + '/api/v1/get_url/search'\n      }\n      else if (this.props.params.per_type === 'moral') {\n        url = API_URL + '/api/v1/read_acts/search'\n      }\n\n      axios({\n        method: 'POST',\n        url,\n        data: this.state.file,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\n      }).then((res) => {\n        this.setState({\n          spinner: 'd-none',\n          comp_name: true\n        })\n\n        if (this.props.params.per_type === 'fisica') {\n\n          let type_img = res['data']['type_img']\n\n          let data = res['data']['data_text']\n\n          if (data === 'Documento no identificado') {\n            this.inputRef.current.value = \"\"\n            this.setState({\n              doc_up: false\n            }, () => {\n              this.props.setState({\n                modal: !this.props.params.modal\n              })\n            })\n          }\n          else if (data === 'Documento en mala posicion') {\n            this.inputRef.current.value = \"\"\n            this.setState({\n              doc_up: false\n            }, () => {\n              this.props.setState({\n                modal_pos: !this.props.params.modal_pos\n              })\n            })\n          }\n          else if (type_img === this.props.params.up_1 || type_img === this.props.params.up_2) {\n            this.inputRef.current.value = \"\"\n            this.deleteForm()\n            this.deleteDoc()\n            this.props.setState({\n              modal_del: !this.props.params.modal_del\n            })\n\n          }\n          else {\n            const birthdate = data['birthdate']\n            const address = data['address']\n\n            // Check type of document\n            var index\n            if (res['data']['type_img'] === 'ine') {\n              index = 0;\n            }\n            else if (res['data']['type_img'] === 'licencia') {\n              index = 1;\n            }\n            else {\n              index = 2;\n            }\n\n            // Set checked document\n            const copyChecked = []\n            copyChecked.concat(checkedCopy)\n            copyChecked[index] = true;\n\n            // Set user info\n            this.setState({\n              user: {\n                name: data['name']['first_name'],\n                first_surname: data['name']['first_surname'],\n                second_surname: data['name']['second_surname'],\n                birthdate: birthdate[0] + \"-\" + birthdate[1] + \"-\" + birthdate[2],\n                gender: data['sex'],\n                curp: data['curp'],\n                city: address['city'],\n                colony: address['colony'],\n                state: address['state'],\n                street: address['street'],\n                clave: data['id_card']\n              },\n              checked: copyChecked,\n              disabled: false,\n              num_activ: '-active'\n            }, () => {\n\n              this.onClick()\n\n              if (this.state.comp_id === 0) {\n                this.props.checkContinue(this.state.user)\n                this.props.setState({\n                  img_1: res['data']['img_name'],\n                  name_1: this.state.user.name,\n                  first_surname_1: this.state.user.first_surname,\n                  second_surname_1: this.state.user.second_surname,\n                  birthdate_1: this.state.user.birthdate,\n                  curp_1: this.state.user.curp,\n                  up_1: type_img,\n                  clave_1: this.state.user.clave,\n                  gender_1: this.state.user.gender,\n                  city_1: this.state.user.city,\n                  colony_1: this.state.user.colony,\n                  state_1: this.state.user.state,\n                  street_1: this.state.user.street,\n                  comp: true,\n                  comp_name: true,\n                  comp_surname1: true,\n                  comp_surname2: true,\n                  comp_birth: true,\n                  comp_city: true,\n                  comp_colony: true,\n                  comp_state: true,\n                  comp_street: true,\n                  comp_gender: true,\n                  comp_clave: true,\n                  comp_curp: true\n                })\n              } else if (this.state.comp_id === 1) {\n                this.props.setState({\n                  img_2: res['data']['img_name'],\n                  name_2: this.state.user.name,\n                  first_surname_2: this.state.user.first_surname,\n                  second_surname_2: this.state.user.second_surname,\n                  birthdate_2: this.state.user.birthdate,\n                  curp_2: this.state.user.curp,\n                  up_2: type_img,\n                  clave_2: this.state.user.clave,\n                  gender_2: this.state.user.gender,\n                  city_2: this.state.user.city,\n                  colony_2: this.state.user.colony,\n                  state_2: this.state.user.state,\n                  street_2: this.state.user.street,\n                  comp_name: true,\n                  comp_surname1: true,\n                  comp_surname2: true,\n                  comp_birth: true,\n                  comp_city: true,\n                  comp_colony: true,\n                  comp_state: true,\n                  comp_street: true,\n                  comp_gender: true,\n                  comp_clave: true,\n                  comp_curp: true,\n                })\n              }\n            })\n          }\n        }\n        else {\n\n          let data = res['data']\n\n          let doc_type = data['type']\n\n          this.setState({\n            doc_type\n          })\n\n          if (this.props.params.last_moral_up === doc_type) {\n            alert('Hay que subir un archivo diferente la anterior')\n            this.setState({\n              doc_up: false\n            })\n          }\n          else {\n            this.props.setState({\n              last_moral_up: doc_type\n            })\n\n            if (doc_type === 'acta') {\n\n              const copyChecked = []\n              copyChecked.concat(checkedCopy)\n              copyChecked[3] = true;\n              const data_length = data['entities'].length\n\n              let entities_json = []\n\n              for (let i = 0; i < data_length; i++) {\n                let entity = [\n                  data['entities'][i],\n                  '',\n                  false\n                ]\n                entities_json.push(entity)\n              }\n              this.setState({\n                entities: entities_json,\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick()\n              })\n            }\n            else {\n\n              const copyChecked = []\n              copyChecked.concat(checkedCopy)\n              copyChecked[4] = true;\n\n              this.setState({\n                moral: {\n                  activities: data['activities'][0]['activity'],\n                  address: {\n                    city: data['address']['city'],\n                    colony: data['address']['colony'],\n                    state: data['address']['state'],\n                    street: data['address']['street'],\n                    zip: data['address']['zip']\n                  },\n                  business_name: data['business_name'],\n                  cap_reg: data['capital_regime'],\n                  last_update: data['last_date_of_change'],\n                  rfc: data['rfc'],\n                  first_op: data['start_date_of_operations'],\n                  status: data['status'],\n                  tradename: data['tradename']\n                },\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick()\n                this.props.setState({\n                  moral: {\n                    activities: data['activities'][0]['activity'],\n                    address: {\n                      city: data['address']['city'],\n                      colony: data['address']['colony'],\n                      state: data['address']['state'],\n                      street: data['address']['street'],\n                      zip: data['address']['zip']\n                    },\n                    business_name: data['business_name'],\n                    cap_reg: data['capital_regime'],\n                    last_update: data['last_date_of_change'],\n                    rfc: data['rfc'],\n                    first_op: data['start_date_of_operations'],\n                    status: data['status'],\n                    tradename: data['tradename']\n                  }\n                })\n              })\n            }\n          }\n\n        }\n      })\n    } else {\n      alert('Token error')\n    }\n  }\n\n  checkCard(index) {\n    const checked = this.state.checked.map((checkbox, i) => {\n      if (i === index) {\n        return !checkbox\n      } else {\n        return false\n      }\n    })\n    this.setState({\n      checked,\n    })\n  }\n\n  onClick = () => {\n    this.setState({\n      info: true,\n      spinner: 'd-none'\n    });\n  }\n\n  saveData = () => {\n    let entities_true = []\n\n    this.state.entities.forEach(function (element) {\n      if (element[2]) {\n        entities_true.push(element)\n      }\n    })\n\n    this.props.setState({\n      entities: entities_true\n    })\n\n  }\n\n  deleteDoc = () => {\n    this.setState({\n      doc_up: false,\n      checked: checkedCopy,\n      image: ''\n    }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({\n          up_1: ''\n        })\n      }\n      else {\n        this.props.setState({\n          up_2: ''\n        })\n      }\n    })\n\n    if (this.props.params.per_type == 'afore') {\n      if (this.state.comp_id == 1) {\n        this.props.setState({\n          video: '',\n          error: '',\n          afore: {\n            identity_verified: '',\n            name_verified: '',\n            organization_destiny: '',\n            organization_origin: '',\n            name_ine: '',\n            name_video: ''\n          }\n        })\n      }\n      else {\n        this.props.setState({\n          image: '',\n          error: '',\n          afore: {\n            identity_verified: '',\n            name_verified: '',\n            organization_destiny: '',\n            organization_origin: '',\n            name_ine: '',\n            name_video: ''\n          }\n        })\n      }\n    }\n    this.inputRef.current.value = \"\"\n    this.deleteForm()\n  }\n\n  deleteForm = () => {\n    this.setState({\n      user: { name: '', first_surname: '', second_surname: '', city: '', colony: '', state: '', street: '', gender: '', clave: '', curp: '', birthdate: '' },\n      moral: moralCopy,\n      disabled: true,\n    }, () => {\n      if (this.state.comp_id === 0 && this.props.params.per_type === 'fisica') {\n\n        this.props.setState({\n          comp: true,\n          continue: 'disabled',\n          img_1: '',\n          up_1: '',\n          curp_1: '',\n          name_1: '',\n          first_surname_1: '',\n          second_surname_1: '',\n          birthdate_1: '',\n          gender_1: '',\n          city_1: '',\n          colony_1: '',\n          state_1: '',\n          street_1: '',\n          comp_name: true,\n          comp_surname1: true,\n          comp_surname2: true,\n          comp_birth: true,\n          comp_city: true,\n          comp_colony: true,\n          comp_state: true,\n          comp_street: true,\n          comp_gender: true,\n          comp_clave: true,\n          comp_curp: true,\n        })\n      }\n      else if (this.state.comp_id === 1 && this.props.params.per_type === 'fisica') {\n        this.props.setState({\n          comp: true,\n          img_2: '',\n          up_2: '',\n          curp_2: '',\n          name_2: '',\n          first_surname_2: '',\n          second_surname_2: '',\n          birthdate_2: '',\n          gender_2: '',\n          city_2: '',\n          colony_2: '',\n          state_2: '',\n          street_2: '',\n          comp_name: true,\n          comp_surname1: true,\n          comp_surname2: true,\n          comp_birth: true,\n          comp_city: true,\n          comp_colony: true,\n          comp_state: true,\n          comp_street: true,\n          comp_gender: true,\n          comp_clave: true,\n          comp_curp: true,\n        })\n      } else {\n        this.props.setState({\n          last_moral_up: '',\n        })\n      }\n    });\n  }\n\n  handlerName = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['business_name'] = event.target.value\n    this.setState({ moral: temp_moral }, () => {\n      this.props.setState({ moral: temp_moral })\n    })\n  }\n\n  handlerCity = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"city\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerColony = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"colony\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerState = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"state\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerStreet = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"street\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerActivities = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"activities\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerRFC = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"rfc\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerStatus = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"status\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerTradename = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"tradename\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerCapReg = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"cap_reg\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegDay = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][0] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegMonth = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][1] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegYear = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][2] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegDay = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][0] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegMonth = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][1] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegYear = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][2] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerPerName = (event) => {\n    let temp_user = this.state.user\n    temp_user['name'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ name_1: this.state.user.name, comp_name: true, comp: true })\n      } else {\n        this.props.setState({ name_2: this.state.user.name, comp_name: true, comp: true })\n      }\n    })\n  }\n\n  handlerFisrSurname = (event) => {\n    let temp_user = this.state.user\n    temp_user['first_surname'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ first_surname_1: this.state.user.first_surname, comp_surname1: true, comp: true })\n      }\n      else {\n        this.props.setState({ first_surname_2: this.state.user.first_surname, comp_surname1: true, comp: true })\n      }\n    })\n  }\n\n  handlerSecondSurname = (event) => {\n    let temp_user = this.state.user\n    temp_user['second_surname'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ second_surname_1: this.state.user.second_surname, comp_surname2: true, comp: true })\n      }\n      else {\n        this.props.setState({ second_surname_2: this.state.user.second_surname, comp_surname2: true, comp: true })\n      }\n    })\n  }\n\n  handlerBirth = (event) => {\n    let temp_user = this.state.user\n    temp_user['birthdate'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ birthdate_1: this.state.user.birthdate, comp_birth: true, comp: true })\n      }\n      else {\n        this.props.setState({ birthdate_2: this.state.user.birthdate, comp_birth: true, comp: true })\n      }\n    })\n  }\n\n  handlerPerCity = (event) => {\n    let temp_user = this.state.user\n    temp_user['city'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ city_1: this.state.user.city, comp_city: true, comp: true })\n      }\n      else {\n        this.props.setState({ city_2: this.state.user.city, comp_city: true, comp: true })\n      }\n    })\n  }\n\n  handlerPerColony = (event) => {\n    let temp_user = this.state.user\n    temp_user['colony'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ colony_1: this.state.user.colony, comp_colony: true, comp: true })\n      }\n      else {\n        this.props.setState({ colony_2: this.state.user.colony, comp_colony: true, comp: true })\n      }\n    })\n  }\n  handlerPerState = (event) => {\n    let temp_user = this.state.user\n    temp_user['state'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ state_1: this.state.user.state, comp_state: true, comp: true })\n      }\n      else {\n        this.props.setState({ state_2: this.state.user.state, comp_state: true, comp: true })\n      }\n    })\n  }\n  handlerPerStreet = (event) => {\n    let temp_user = this.state.user\n    temp_user['street'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ street_1: this.state.user.street, comp_street: true, comp: true })\n      }\n      else {\n        this.props.setState({ street_2: this.state.user.street, comp_street: true, comp: true })\n      }\n    })\n  }\n\n  handlerGender = (event) => {\n    let temp_user = this.state.user\n    temp_user['gender'] = event.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ gender_1: this.state.user.gender, comp_gender: true, comp: true })\n      }\n      else {\n        this.props.setState({ gender_2: this.state.user.gender, comp_gender: true, comp: true })\n      }\n    })\n  }\n\n  handlerClave = (event) => {\n    let temp_user = this.state.user\n    temp_user['clave'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ clave_1: this.state.user.clave, comp_clave: true, comp: true })\n      }\n      else {\n        this.props.setState({ clave_2: this.state.user.clave, comp_clave: true, comp: true })\n      }\n    })\n  }\n\n  handlerCURP = (event) => {\n    let temp_user = this.state.user\n    temp_user['curp'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ curp_1: this.state.user.curp, comp_curp: true, comp: true })\n      }\n      else {\n        this.props.setState({ curp_2: this.state.user.curp, comp_curp: true, comp: true })\n      }\n    })\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      image_open: !prevState.image_open\n    }));\n  }\n\n  render() {\n    const { user } = this.state\n    const { moral } = this.state\n    return (\n      <div>\n        <Modal isOpen={this.state.image_open} toggle={this.toggle}>\n          <img src={this.state.image} height=\"100%\" width=\"100%\" onClick={this.toggle}></img>\n        </Modal>\n        <div className={`document-card ${this.props.customClasses}`}>\n          <div className={\"spinnermodal \" + this.state.spinner}>\n            <Spinner style={{ width: '2rem', height: '2rem' }} />{' '}\n          </div>\n          {this.state.image !== '' &&\n          <div className=\"datawrapper\">\n            <button onClick={this.deleteDoc} className=\"fa-btn ml-auto\">\n              {this.props.params.per_type === 'afore' && this.state.comp_id == 0 && this.props.params.image != '' && <FaTrash />}\n              {this.props.params.per_type === 'afore' && this.state.comp_id == 1 && this.props.params.video != '' && <FaTrash />}\n              {this.props.params.per_type !== 'afore' && <FaTrash />}\n            </button>\n          </div>\n          }\n          {this.props.params.per_type === 'afore' && <p className=\"title\">{this.state.comp_id == 0 ? 'INE' : 'Vídeo'}</p>}\n          <p className=\"subtitle\">Sube tu archivo a reconocer, puede ser {this.props.params.per_type === 'fisica' && <b> INE, IFE, Licencia o Pasaporte</b>}\n            {this.props.params.per_type === 'moral' && <b> Acta Constitutiva o RFC</b>}\n            {this.props.params.per_type === 'afore' && <b>{this.state.comp_id == 0 ? '.jpg, .jpeg o .png' : '.mp4'}</b>}</p>\n          {this.props.params.per_type !== 'afore' && <input onChange={this.loadFileToBase64} ref={this.inputRef} type=\"file\" accept=\".jpg, .jpeg, .png, .pdf\" className=\"select-file\" />}\n          {this.props.params.per_type === 'afore' && <input onChange={this.loadFileToBase64} ref={this.inputRef} type=\"file\" accept={this.props.params.per_type === 'afore' && this.state.comp_id == 0 ? '.jpg, .jpeg, .png, .pdf' : '.mp4'} className=\"select-file\" />}\n          <form action=\"\">\n            <div className=\"select-document-form flex-column flex-md-row mt-30\">\n              {\n                this.state.documentsList.map((type, index) => {\n                  return (\n\n                    <React.Fragment>\n                      {this.state.checked[index] &&\n                        <div key={`document-card-${index}-${this.state.comp_id}`} className={`documentwrapper ${this.state.checked[index] ? '-selected' : ''}`}>\n\n                          <input checked={this.state.checked[index]} onChange={() => this.checkCard(index)} className=\"radio\" type=\"checkbox\" disabled />\n                          <div className=\"checked\">\n                            <FaCheckCircle />\n                          </div>\n\n                          <div className={`documenttype ${type.image}`}></div>\n                          <p className=\"text-center\">{type.documentType}</p>\n                        </div>\n                      }\n                    </React.Fragment>\n                  )\n                })\n              }\n              {!this.state.pdf &&\n                <React.Fragment>\n                  {this.state.doc_up &&\n                    <div style={{ marginRight: \"80px\" }}>\n                      <p><b>Abrir vista previa</b></p>\n                      {this.state.type_file == 'video' ? <i className=\"fas fa-video fs-40\"></i> : <img src={this.state.image} position=\"center\" className=\"datawrapper flex-column\" height=\"100px\" onClick={this.toggle} />}\n                    </div>\n                  }\n                </React.Fragment>\n              }\n            </div>\n          </form>\n        </div>\n\n\n        {this.props.params.per_type != 'afore' && <div className=\"document-card -light -border\">\n          {this.props.params.per_type === 'fisica' &&\n            <React.Fragment>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.name_color} label=\"Nombre(s)*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerName} type=\"text\" value={user.name} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.surname1_color} label=\"Apellido Paterno*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerFisrSurname} type=\"text\" value={user.first_surname} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.surname2_color} label=\"Apellido Materno*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerSecondSurname} type=\"text\" value={user.second_surname} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.birth_color} label=\"Nacimiento* DD-MM-AAAA\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerBirth} type=\"text\" value={user.birthdate} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.city_color} label=\"Ciudad\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerCity} type=\"text\" value={user.city} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.colony_color} label=\"Colonia\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerColony} type=\"text\" value={user.colony} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.state_color} label=\"Estado\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerState} type=\"text\" value={user.state} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.street_color} label=\"Calle\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerStreet} type=\"text\" value={user.street} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                {/* <Select\n                  onChange={this.handlerGender}\n                  options={options}\n                >Género</Select> */}\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.gender_color} label=\"Sexo\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerGender} type=\"text\" value={user.gender} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.clave_color} label=\"No. identificación\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerClave} type=\"text\" value={user.clave} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.curp_color} label=\"CURP*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCURP} type=\"text\" value={user.curp} />\n              </div>\n            </React.Fragment>\n          }\n          {this.props.params.per_type === 'moral' &&\n            <React.Fragment>\n              {this.state.doc_type === 'acta' &&\n                <React.Fragment>\n                  <form action=\"\">\n                    {this.state.entities.map((entity, index) => {\n                      return (\n                        <Checkbox\n                          onClick={() => { this.toggle() }}\n                          setState={() => { this._setState() }}\n                          index={index}\n                          value={entity}\n                        />\n                      )\n                    })\n                    }\n                  </form>\n                  <div className=\"col-12 px-0\">\n                    <button className=\"button -outline\" onClick={this.saveData}>GUARDAR</button>\n                  </div>\n                </React.Fragment>\n              }\n              {this.state.doc_type === 'rfc' &&\n                <React.Fragment>\n                  <div className=\"datawrapper flex-column\">\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerName} type=\"text\" label=\"Nombre\" value={moral.business_name} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCity} type=\"text\" label=\"Ciudad\" value={moral.address.city} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerColony} type=\"text\" label=\"Colonia\" value={moral.address.colony} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerState} type=\"text\" label=\"Estado\" value={moral.address.state} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerStreet} type=\"text\" label=\"Calle\" value={moral.address.street} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerActivities} type=\"text\" label=\"Actividad\" value={moral.activities} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerRFC} type=\"text\" label=\"RFC\" value={moral.rfc} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerStatus} type=\"text\" label=\"Estado\" value={moral.status} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerTradename} type=\"text\" label=\"Nombre comercial\" value={moral.tradename} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCapReg} type=\"text\" label=\"Regimen de Capital\" value={moral.cap_reg} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegDay} type=\"number\" label=\"Día\" value={moral.first_op[0]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegMonth} type=\"number\" label=\"Mes\" value={moral.first_op[1]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegYear} type=\"number\" label=\"Año\" value={moral.first_op[2]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegDay} type=\"number\" label=\"Día\" value={moral.last_update[0]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegMonth} type=\"number\" label=\"Mes\" value={moral.last_update[1]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegYear} type=\"number\" label=\"Año\" value={moral.last_update[2]} />\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <ButtonOutline title=\"GUARDAR\" customClass=\"mt-30\" />\n                    </div>\n                  </div>\n                </React.Fragment>\n              }\n            </React.Fragment>\n          }\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default DocumentCard\n"]},"metadata":{},"sourceType":"module"}