{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/DocumentCard/DocumentCard.jsx\";\nimport React, { Component } from 'react';\nimport { FaCheckCircle, FaTrash, FaCommentsDollar } from 'react-icons/fa';\nimport axios from 'axios';\nimport { Spinner, Modal } from 'reactstrap';\nimport Checkbox from './../Checkbox/Checkbox';\nimport InputForm from '../InputForm/InputForm';\nimport { ButtonOutline } from '../Button/Button';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst moralCopy = {\n  addrres: '',\n  activities: '',\n  business_name: '',\n  cap_reg: '',\n  last_update: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  first_op: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  rfc: '',\n  status: '',\n  tradename: '',\n  entities: []\n};\nconst checkedCopy = [false, false, false, false, false];\n\nclass DocumentCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this._setState = state => {\n      this.setState(state);\n    };\n\n    this.loadFileToBase64 = event => {\n      let file;\n\n      try {\n        file = event.target.files[0];\n      } catch {\n        file = event;\n      }\n\n      let pdf = file.type === 'application/pdf';\n      this.setState({\n        image_event: file\n      });\n\n      if (file.size < 14400 && !pdf) {\n        // alert('Por favor suba una imagen con dimensiones mayores a 120 x 120')\n        this.props.setState({\n          modal: !this.props.params.modal,\n          active: this.state.comp_id\n        });\n      } else if (this.state.doc_up) {\n        // alert('Por favor borre el documento antes de subir otro')\n        this.props.setState({\n          modal_up: !this.props.params.modal_up,\n          active: this.state.comp_id\n        });\n      } else {\n        this.reader = new FileReader();\n        this.reader.readAsDataURL(file);\n\n        this.reader.onloadend = () => {\n          var image = new FormData();\n\n          if (this.props.params.per_type === 'fisica') {\n            image.append('image', file);\n            image.append('pdf', pdf);\n          } else {\n            image.append('pdf', file);\n          }\n\n          console.log(\"IMAGE\", image);\n          this.setState({\n            file: image,\n            doc_up: true,\n            pdf,\n            spinner: '',\n            image: this.reader.result\n          }, () => {\n            this.uploadFile();\n          });\n        };\n      }\n    };\n\n    this.uploadFile = () => {\n      if (localStorage.getItem(\"id_token\")) {\n        let url; // let res\n\n        if (this.props.params.per_type === 'fisica') {\n          url = API_URL + '/api/v1/get_url/search';\n        } else if (this.props.params.per_type === 'moral') {\n          url = API_URL + '/api/v1/read_acts/search';\n        }\n\n        axios({\n          method: 'POST',\n          url,\n          data: this.state.file,\n          config: {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        }).then(res => {\n          this.setState({\n            spinner: 'd-none',\n            comp_name: true\n          });\n\n          if (this.props.params.per_type === 'fisica') {\n            let type_img = res['data']['type_img'];\n            let data = res['data']['data_text'];\n\n            if (data === 'Documento no identificado') {\n              this.inputRef.current.value = \"\";\n              this.setState({\n                doc_up: false\n              }, () => {\n                this.props.setState({\n                  modal: !this.props.params.modal\n                });\n              });\n            } else if (data === 'Documento en mala posicion') {\n              this.inputRef.current.value = \"\";\n              this.setState({\n                doc_up: false\n              }, () => {\n                this.props.setState({\n                  modal_pos: !this.props.params.modal_pos\n                });\n              });\n            } else if (type_img === this.props.params.up_1 || type_img === this.props.params.up_2) {\n              this.props.setState({\n                modal_del: !this.props.params.modal_del\n              });\n            } else {\n              const birthdate = data['birthdate'];\n              const address = data['address']; // Check type of document\n\n              var index;\n\n              if (res['data']['type_img'] === 'ine') {\n                index = 0;\n              } else if (res['data']['type_img'] === 'licencia') {\n                index = 1;\n              } else {\n                index = 2;\n              } // Set checked document\n\n\n              const copyChecked = [];\n              copyChecked.concat(checkedCopy);\n              copyChecked[index] = true; // Set user info\n\n              this.setState({\n                user: {\n                  name: data['name']['first_name'],\n                  first_surname: data['name']['first_surname'],\n                  second_surname: data['name']['second_surname'],\n                  birthdate: birthdate[0] + \"-\" + birthdate[1] + \"-\" + birthdate[2],\n                  gender: data['sex'],\n                  curp: data['curp'],\n                  city: address['city'],\n                  colony: address['colony'],\n                  state: address['state'],\n                  street: address['street'],\n                  clave: data['id_card']\n                },\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick();\n\n                if (this.state.comp_id === 0) {\n                  this.props.checkContinue(this.state.user);\n                  this.props.setState({\n                    img_1: res['data']['img_name'],\n                    name_1: this.state.user.name,\n                    first_surname_1: this.state.user.first_surname,\n                    second_surname_1: this.state.user.second_surname,\n                    birthdate_1: this.state.user.birthdate,\n                    curp_1: this.state.user.curp,\n                    up_1: type_img,\n                    clave_1: this.state.user.clave,\n                    gender_1: this.state.user.gender,\n                    city_1: this.state.user.city,\n                    colony_1: this.state.user.colony,\n                    state_1: this.state.user.state,\n                    street_1: this.state.user.street,\n                    comp: true\n                  });\n                } else if (this.state.comp_id === 1) {\n                  this.props.setState({\n                    img_2: res['data']['img_name'],\n                    name_2: this.state.user.name,\n                    first_surname_2: this.state.user.first_surname,\n                    second_surname_2: this.state.user.second_surname,\n                    birthdate_2: this.state.user.birthdate,\n                    curp_2: this.state.user.curp,\n                    up_2: type_img,\n                    clave_2: this.state.user.clave,\n                    gender_2: this.state.user.gender,\n                    city_2: this.state.user.city,\n                    colony_2: this.state.user.colony,\n                    state_2: this.state.user.state,\n                    street_2: this.state.user.street,\n                    comp_name: true,\n                    comp_surname1: true,\n                    comp_surname2: true,\n                    comp_birth: true,\n                    comp_city: true,\n                    comp_colony: true,\n                    comp_state: true,\n                    comp_street: true,\n                    comp_gender: true,\n                    comp_clave: true,\n                    comp_curp: true\n                  });\n                }\n              });\n            }\n          } else {\n            let data = res['data'];\n            let doc_type = data['type'];\n            this.setState({\n              doc_type\n            });\n\n            if (this.props.params.last_moral_up === doc_type) {\n              alert('Hay que subir un archivo diferente la anterior');\n              this.setState({\n                doc_up: false\n              });\n            } else {\n              this.props.setState({\n                last_moral_up: doc_type\n              });\n\n              if (doc_type === 'acta') {\n                const copyChecked = [];\n                copyChecked.concat(checkedCopy);\n                copyChecked[3] = true;\n                const data_length = data['entities'].length;\n                let entities_json = [];\n\n                for (let i = 0; i < data_length; i++) {\n                  let entity = [data['entities'][i], '', false];\n                  entities_json.push(entity);\n                }\n\n                this.setState({\n                  entities: entities_json,\n                  checked: copyChecked,\n                  disabled: false,\n                  num_activ: '-active'\n                }, () => {\n                  this.onClick();\n                });\n              } else {\n                const copyChecked = [];\n                copyChecked.concat(checkedCopy);\n                copyChecked[4] = true;\n                this.setState({\n                  moral: {\n                    activities: data['activities'][0]['activity'],\n                    address: {\n                      city: data['address']['city'],\n                      colony: data['address']['colony'],\n                      state: data['address']['state'],\n                      street: data['address']['street'],\n                      zip: data['address']['zip']\n                    },\n                    business_name: data['business_name'],\n                    cap_reg: data['capital_regime'],\n                    last_update: data['last_date_of_change'],\n                    rfc: data['rfc'],\n                    first_op: data['start_date_of_operations'],\n                    status: data['status'],\n                    tradename: data['tradename']\n                  },\n                  checked: copyChecked,\n                  disabled: false,\n                  num_activ: '-active'\n                }, () => {\n                  this.onClick();\n                  this.props.setState({\n                    moral: {\n                      activities: data['activities'][0]['activity'],\n                      address: {\n                        city: data['address']['city'],\n                        colony: data['address']['colony'],\n                        state: data['address']['state'],\n                        street: data['address']['street'],\n                        zip: data['address']['zip']\n                      },\n                      business_name: data['business_name'],\n                      cap_reg: data['capital_regime'],\n                      last_update: data['last_date_of_change'],\n                      rfc: data['rfc'],\n                      first_op: data['start_date_of_operations'],\n                      status: data['status'],\n                      tradename: data['tradename']\n                    }\n                  });\n                });\n              }\n            }\n          }\n        });\n      } else {\n        alert('Token error');\n      }\n    };\n\n    this.onClick = () => {\n      this.setState({\n        info: true,\n        spinner: 'd-none'\n      });\n    };\n\n    this.saveData = () => {\n      let entities_true = [];\n      this.state.entities.forEach(function (element) {\n        if (element[2]) {\n          entities_true.push(element);\n        }\n      });\n      this.props.setState({\n        entities: entities_true\n      });\n    };\n\n    this.deleteDoc = () => {\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      });\n      this.inputRef.current.value = \"\";\n    };\n\n    this.deleteForm = () => {\n      this.setState({\n        user: {\n          name: '',\n          first_surname: '',\n          second_surname: '',\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          gender: '',\n          clave: '',\n          curp: '',\n          birthdate: ''\n        },\n        moral: moralCopy,\n        disabled: true\n      }, () => {\n        if (this.state.comp_id === 0 && this.props.params.per_type === 'fisica') {\n          this.props.setState({\n            comp: true,\n            continue: 'disabled',\n            img_1: '',\n            up_1: '',\n            curp_1: '',\n            name_1: '',\n            first_surname_1: '',\n            second_surname_1: '',\n            birthdate_1: '',\n            gender_1: '',\n            comp_name: true,\n            comp_surname1: true,\n            comp_surname2: true,\n            comp_birth: true,\n            comp_city: true,\n            comp_colony: true,\n            comp_state: true,\n            comp_street: true,\n            comp_gender: true,\n            comp_clave: true,\n            comp_curp: true\n          });\n        } else if (this.state.comp_id === 1 && this.props.params.per_type === 'fisica') {\n          this.props.setState({\n            comp: true,\n            img_2: '',\n            up_2: '',\n            curp_2: '',\n            name_2: '',\n            first_surname_2: '',\n            second_surname_2: '',\n            birthdate_2: '',\n            gender_2: '',\n            comp_name: true,\n            comp_surname1: true,\n            comp_surname2: true,\n            comp_birth: true,\n            comp_city: true,\n            comp_colony: true,\n            comp_state: true,\n            comp_street: true,\n            comp_gender: true,\n            comp_clave: true,\n            comp_curp: true\n          });\n        } else {\n          this.props.setState({\n            last_moral_up: ''\n          });\n        }\n      });\n    };\n\n    this.handlerName = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['business_name'] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerCity = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"city\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerColony = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"colony\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerState = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"state\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerStreet = event => {\n      let temp_moral = this.state.moral;\n      temp_moral['address'][\"street\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerActivities = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"activities\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerRFC = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"rfc\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerStatus = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"status\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerTradename = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"tradename\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerCapReg = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"cap_reg\"] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegDay = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][0] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegMonth = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][1] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerDateRegYear = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"first_op\"][2] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegDay = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][0] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegMonth = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][1] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerUpdRegYear = event => {\n      let temp_moral = this.state.moral;\n      temp_moral[\"last_update\"][2] = event.target.value;\n      this.setState({\n        moral: temp_moral\n      }, () => {\n        this.props.setState({\n          moral: temp_moral\n        });\n      });\n    };\n\n    this.handlerPerName = event => {\n      let temp_user = this.state.user;\n      temp_user['name'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            name_1: this.state.user.name,\n            comp_name: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            name_2: this.state.user.name,\n            comp_name: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerFisrSurname = event => {\n      let temp_user = this.state.user;\n      temp_user['first_surname'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            first_surname_1: this.state.user.first_surname,\n            comp_surname1: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            first_surname_2: this.state.user.first_surname,\n            comp_surname1: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerSecondSurname = event => {\n      let temp_user = this.state.user;\n      temp_user['second_surname'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            second_surname_1: this.state.user.second_surname,\n            comp_surname2: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            second_surname_2: this.state.user.second_surname,\n            comp_surname2: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerBirth = event => {\n      let temp_user = this.state.user;\n      temp_user['birthdate'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            birthdate_1: this.state.user.birthdate,\n            comp_birth: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            birthdate_2: this.state.user.birthdate,\n            comp_birth: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerCity = event => {\n      let temp_user = this.state.user;\n      temp_user['city'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            city_1: this.state.user.city,\n            comp_city: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            city_2: this.state.user.city,\n            comp_city: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerColony = event => {\n      let temp_user = this.state.user;\n      temp_user['colony'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            colony_1: this.state.user.colony,\n            comp_colony: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            colony_2: this.state.user.colony,\n            comp_colony: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerState = event => {\n      let temp_user = this.state.user;\n      temp_user['state'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            state_1: this.state.user.state,\n            comp_state: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            state_2: this.state.user.state,\n            comp_state: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerPerStreet = event => {\n      let temp_user = this.state.user;\n      temp_user['street'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            street_1: this.state.user.street,\n            comp_street: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            street_2: this.state.user.street,\n            comp_street: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerGender = event => {\n      let temp_user = this.state.user;\n      temp_user['gender'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            gender_1: this.state.user.gender,\n            comp_gender: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            gender_2: this.state.user.gender,\n            comp_gender: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerClave = event => {\n      let temp_user = this.state.user;\n      temp_user['clave'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            clave_1: this.state.user.clave,\n            comp_clave: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            clave_2: this.state.user.clave,\n            comp_clave: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.handlerCURP = event => {\n      let temp_user = this.state.user;\n      temp_user['curp'] = event.target.value;\n      this.setState({\n        user: temp_user\n      }, () => {\n        if (this.state.comp_id === 0) {\n          this.props.setState({\n            curp_1: this.state.user.curp,\n            comp_curp: true,\n            comp: true\n          });\n        } else {\n          this.props.setState({\n            curp_2: this.state.user.curp,\n            comp_curp: true,\n            comp: true\n          });\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        image_open: !prevState.image_open\n      }));\n    };\n\n    this.checkCard = this.checkCard.bind(this);\n    this.inputRef = React.createRef();\n    this.state = {\n      image_event: '',\n      checkEntities: true,\n      image: '',\n      image_open: false,\n      spinner: 'd-none',\n      doc_type: '',\n      disabled: true,\n      num_activ: '',\n      doc_up: false,\n      comp_id: 0,\n      checked: [false, false, false, false, false],\n      documentsList: [{\n        image: '-ife',\n        documentType: 'INE'\n      }, {\n        image: '-license',\n        documentType: 'Licencia'\n      }, {\n        image: '-passport',\n        documentType: 'Pasaporte'\n      }, {\n        image: '-acta',\n        documentType: 'Acta'\n      }, {\n        image: '-rfc',\n        documentType: 'RFC'\n      }],\n      file: '',\n      pdf: false,\n      info: false,\n      // Data for physical person\n      user: {\n        name: '',\n        first_surname: '',\n        second_surname: '',\n        city: '',\n        colony: '',\n        state: '',\n        street: '',\n        gender: '',\n        clave: '',\n        curp: '',\n        birthdate: ''\n      },\n      // Data for moral person\n      moral: {\n        addrres: {\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          zip: ''\n        },\n        activities: '',\n        business_name: '',\n        cap_reg: '',\n        last_update: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        first_op: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        rfc: '',\n        status: '',\n        tradename: ''\n      },\n      entities: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      comp_id: this.props.id\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.params.replace && this.props.params.active === this.state.comp_id) {\n      this.props.setState({\n        replace: false\n      });\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      }, () => {\n        this.loadFileToBase64(this.state.image_event);\n      });\n    }\n  } // Obtener archivo de identificación\n\n\n  checkCard(index) {\n    const checked = this.state.checked.map((checkbox, i) => {\n      if (i === index) {\n        return !checkbox;\n      } else {\n        return false;\n      }\n    });\n    this.setState({\n      checked\n    });\n  }\n\n  render() {\n    const user = this.state.user;\n    const moral = this.state.moral;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.image_open,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.image,\n      height: \"100%\",\n      width: \"100%\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"document-card \".concat(this.props.customClasses),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinnermodal \" + this.state.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '2rem',\n        height: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }), ' '), React.createElement(\"div\", {\n      className: \"datawrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteDoc,\n      className: \"fa-btn ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827\n      },\n      __self: this\n    }, \"Carga tu archivo a reconocer, puede ser \", this.props.params.per_type === 'fisica' && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827\n      },\n      __self: this\n    }, \" INE, IFE, Licencia o Pasaporte\"), this.props.params.per_type === 'moral' && React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828\n      },\n      __self: this\n    }, \" Acta Constitutiva o RFC\")), React.createElement(\"input\", {\n      onChange: this.loadFileToBase64,\n      ref: this.inputRef,\n      type: \"file\",\n      accept: \".jpg, .jpeg, .png, .tiff, .bmp, .gif, .pdf\",\n      className: \"select-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"select-document-form flex-column flex-md-row mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, this.state.documentsList.map((type, index) => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, this.state.checked[index] && React.createElement(\"div\", {\n        key: \"document-card-\".concat(index, \"-\").concat(this.state.comp_id),\n        className: \"documentwrapper \".concat(this.state.checked[index] ? '-selected' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        checked: this.state.checked[index],\n        onChange: () => this.checkCard(index),\n        className: \"radio\",\n        type: \"checkbox\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }, React.createElement(FaCheckCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"documenttype \".concat(type.image),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, type.documentType)));\n    }), !this.state.pdf && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, this.state.doc_up && React.createElement(\"div\", {\n      style: {\n        marginRight: \"80px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, \"Abrir vista previa\")), React.createElement(\"img\", {\n      src: this.state.image,\n      position: \"center\",\n      className: \"datawrapper flex-column\",\n      height: \"100px\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"document-card -light -border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datawrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteForm,\n      className: \"fa-btn ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }))), this.props.params.per_type === 'fisica' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.name_color,\n      label: \"Nombre(s)*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerName,\n      type: \"text\",\n      value: user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.surname1_color,\n      label: \"Apellido Paterno*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerFisrSurname,\n      type: \"text\",\n      value: user.first_surname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.surname2_color,\n      label: \"Apellido Materno*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerSecondSurname,\n      type: \"text\",\n      value: user.second_surname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.birth_color,\n      label: \"Nacimiento* DD-MM-AAAA\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerBirth,\n      type: \"text\",\n      value: user.birthdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.city_color,\n      label: \"Ciudad\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerCity,\n      type: \"text\",\n      value: user.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.colony_color,\n      label: \"Colonia\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerColony,\n      type: \"text\",\n      value: user.colony,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.state_color,\n      label: \"Estado\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerState,\n      type: \"text\",\n      value: user.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.street_color,\n      label: \"Calle\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerPerStreet,\n      type: \"text\",\n      value: user.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.gender_color,\n      label: \"Sexo\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerGender,\n      type: \"text\",\n      value: user.gender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.clave_color,\n      label: \"No. identificaci\\xF3n\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerClave,\n      type: \"text\",\n      value: user.clave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      borderColor: this.props.params.curp_color,\n      label: \"CURP*\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCURP,\n      type: \"text\",\n      value: user.curp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }))), this.props.params.per_type === 'moral' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902\n      },\n      __self: this\n    }, this.state.doc_type === 'acta' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }, this.state.entities.map((entity, index) => {\n      return React.createElement(Checkbox, {\n        onClick: () => {\n          this.toggle();\n        },\n        setState: () => {\n          this._setState();\n        },\n        index: index,\n        value: entity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"col-12 px-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button -outline\",\n      onClick: this.saveData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }, \"GUARDAR\"))), this.state.doc_type === 'rfc' && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datawrapper flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerName,\n      type: \"text\",\n      label: \"Nombre\",\n      value: moral.business_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCity,\n      type: \"text\",\n      label: \"Ciudad\",\n      value: moral.address.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerColony,\n      type: \"text\",\n      label: \"Colonia\",\n      value: moral.address.colony,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerState,\n      type: \"text\",\n      label: \"Estado\",\n      value: moral.address.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerStreet,\n      type: \"text\",\n      label: \"Calle\",\n      value: moral.address.street,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerActivities,\n      type: \"text\",\n      label: \"Actividad\",\n      value: moral.activities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerRFC,\n      type: \"text\",\n      label: \"RFC\",\n      value: moral.rfc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerStatus,\n      type: \"text\",\n      label: \"Estado\",\n      value: moral.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerTradename,\n      type: \"text\",\n      label: \"Nombre comercial\",\n      value: moral.tradename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerCapReg,\n      type: \"text\",\n      label: \"Regimen de Capital\",\n      value: moral.cap_reg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegDay,\n      type: \"number\",\n      label: \"D\\xEDa\",\n      value: moral.first_op[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegMonth,\n      type: \"number\",\n      label: \"Mes\",\n      value: moral.first_op[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerDateRegYear,\n      type: \"number\",\n      label: \"A\\xF1o\",\n      value: moral.first_op[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegDay,\n      type: \"number\",\n      label: \"D\\xEDa\",\n      value: moral.last_update[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegMonth,\n      type: \"number\",\n      label: \"Mes\",\n      value: moral.last_update[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      inputColor: \"-secondary\",\n      customClasses: \"mt-50\",\n      warning: \"Datos no v\\xE1lidos\",\n      onChange: this.handlerUpdRegYear,\n      type: \"number\",\n      label: \"A\\xF1o\",\n      value: moral.last_update[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944\n      },\n      __self: this\n    }, React.createElement(ButtonOutline, {\n      title: \"GUARDAR\",\n      customClass: \"mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default DocumentCard;","map":{"version":3,"sources":["/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/DocumentCard/DocumentCard.jsx"],"names":["React","Component","FaCheckCircle","FaTrash","FaCommentsDollar","axios","Spinner","Modal","Checkbox","InputForm","ButtonOutline","API_URL","process","env","REACT_APP_API_URL","moralCopy","addrres","activities","business_name","cap_reg","last_update","first_op","rfc","status","tradename","entities","checkedCopy","DocumentCard","constructor","props","_setState","state","setState","loadFileToBase64","event","file","target","files","pdf","type","image_event","size","modal","params","active","comp_id","doc_up","modal_up","reader","FileReader","readAsDataURL","onloadend","image","FormData","per_type","append","console","log","spinner","result","uploadFile","localStorage","getItem","url","method","data","config","headers","then","res","comp_name","type_img","inputRef","current","value","modal_pos","up_1","up_2","modal_del","birthdate","address","index","copyChecked","concat","user","name","first_surname","second_surname","gender","curp","city","colony","street","clave","checked","disabled","num_activ","onClick","checkContinue","img_1","name_1","first_surname_1","second_surname_1","birthdate_1","curp_1","clave_1","gender_1","city_1","colony_1","state_1","street_1","comp","img_2","name_2","first_surname_2","second_surname_2","birthdate_2","curp_2","clave_2","gender_2","city_2","colony_2","state_2","street_2","comp_surname1","comp_surname2","comp_birth","comp_city","comp_colony","comp_state","comp_street","comp_gender","comp_clave","comp_curp","doc_type","last_moral_up","alert","data_length","length","entities_json","i","entity","push","moral","zip","info","saveData","entities_true","forEach","element","deleteDoc","deleteForm","continue","handlerName","temp_moral","handlerCity","handlerColony","handlerState","handlerStreet","handlerActivities","handlerRFC","handlerStatus","handlerTradename","handlerCapReg","handlerDateRegDay","handlerDateRegMonth","handlerDateRegYear","handlerUpdRegDay","handlerUpdRegMonth","handlerUpdRegYear","handlerPerName","temp_user","handlerFisrSurname","handlerSecondSurname","handlerBirth","handlerPerCity","handlerPerColony","handlerPerState","handlerPerStreet","handlerGender","handlerClave","handlerCURP","toggle","prevState","image_open","checkCard","bind","createRef","checkEntities","documentsList","documentType","componentDidMount","id","componentDidUpdate","replace","map","checkbox","render","customClasses","width","height","marginRight","name_color","surname1_color","surname2_color","birth_color","city_color","colony_color","state_color","street_color","gender_color","clave_color","curp_color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,OAFF,EAGEC,gBAHF,QAIO,gBAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,aAAa,EAAE,EAHC;AAIhBC,EAAAA,OAAO,EAAE,EAJO;AAKhBC,EAAAA,WAAW,EAAE;AACX,OAAG,EADQ;AAEX,OAAG,EAFQ;AAGX,OAAG;AAHQ,GALG;AAUhBC,EAAAA,QAAQ,EAAE;AACR,OAAG,EADK;AAER,OAAG,EAFK;AAGR,OAAG;AAHK,GAVM;AAehBC,EAAAA,GAAG,EAAE,EAfW;AAgBhBC,EAAAA,MAAM,EAAE,EAhBQ;AAiBhBC,EAAAA,SAAS,EAAE,EAjBK;AAkBhBC,EAAAA,QAAQ,EAAE;AAlBM,CAAlB;AAoBA,MAAMC,WAAW,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAApB;;AAEA,MAAMC,YAAN,SAA2B1B,SAA3B,CAAqC;AAEnC2B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkFnBC,SAlFmB,GAkFNC,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAcD,KAAd;AACD,KApFkB;;AAAA,SA0GnBE,gBA1GmB,GA0GCC,KAAD,IAAW;AAE5B,UAAIC,IAAJ;;AACA,UAAI;AACFA,QAAAA,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAP;AACD,OAFD,CAEE,MAAM;AACNF,QAAAA,IAAI,GAAGD,KAAP;AACD;;AACD,UAAII,GAAG,GAAGH,IAAI,CAACI,IAAL,KAAc,iBAAxB;AAEA,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,WAAW,EAAEL;AAAf,OAAd;;AAGA,UAAIA,IAAI,CAACM,IAAL,GAAY,KAAZ,IAAqB,CAACH,GAA1B,EAA+B;AAC7B;AACA,aAAKT,KAAL,CAAWG,QAAX,CAAoB;AAClBU,UAAAA,KAAK,EAAE,CAAC,KAAKb,KAAL,CAAWc,MAAX,CAAkBD,KADR;AAElBE,UAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc;AAFD,SAApB;AAID,OAND,MAOK,IAAI,KAAKd,KAAL,CAAWe,MAAf,EAAuB;AAC1B;AAEA,aAAKjB,KAAL,CAAWG,QAAX,CAAoB;AAClBe,UAAAA,QAAQ,EAAE,CAAC,KAAKlB,KAAL,CAAWc,MAAX,CAAkBI,QADX;AAElBH,UAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc;AAFD,SAApB;AAID,OAPI,MAQA;AACH,aAAKG,MAAL,GAAc,IAAIC,UAAJ,EAAd;AACA,aAAKD,MAAL,CAAYE,aAAZ,CAA0Bf,IAA1B;;AACA,aAAKa,MAAL,CAAYG,SAAZ,GAAwB,MAAM;AAC5B,cAAIC,KAAK,GAAG,IAAIC,QAAJ,EAAZ;;AAEA,cAAI,KAAKxB,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAAnC,EAA6C;AAC3CF,YAAAA,KAAK,CAACG,MAAN,CAAa,OAAb,EAAsBpB,IAAtB;AACAiB,YAAAA,KAAK,CAACG,MAAN,CAAa,KAAb,EAAoBjB,GAApB;AACD,WAHD,MAIK;AACHc,YAAAA,KAAK,CAACG,MAAN,CAAa,KAAb,EAAoBpB,IAApB;AACD;;AACDqB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACA,eAAKpB,QAAL,CAAc;AACZG,YAAAA,IAAI,EAAEiB,KADM;AAEZN,YAAAA,MAAM,EAAE,IAFI;AAGZR,YAAAA,GAHY;AAIZoB,YAAAA,OAAO,EAAE,EAJG;AAKZN,YAAAA,KAAK,EAAE,KAAKJ,MAAL,CAAYW;AALP,WAAd,EAOG,MAAM;AAEP,iBAAKC,UAAL;AAED,WAXD;AAYD,SAvBD;AAwBD;AACF,KAlKkB;;AAAA,SAoKnBA,UApKmB,GAoKN,MAAM;AAEjB,UAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AAEpC,YAAIC,GAAJ,CAFoC,CAGpC;;AAEA,YAAI,KAAKlC,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAAnC,EAA6C;AAC3CS,UAAAA,GAAG,GAAGpD,OAAO,GAAG,wBAAhB;AACD,SAFD,MAGK,IAAI,KAAKkB,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,OAAnC,EAA4C;AAC/CS,UAAAA,GAAG,GAAGpD,OAAO,GAAG,0BAAhB;AACD;;AAEDN,QAAAA,KAAK,CAAC;AACJ2D,UAAAA,MAAM,EAAE,MADJ;AAEJD,UAAAA,GAFI;AAGJE,UAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWI,IAHb;AAIJ+B,UAAAA,MAAM,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB;AAAX;AAJJ,SAAD,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACf,eAAKrC,QAAL,CAAc;AACZ0B,YAAAA,OAAO,EAAE,QADG;AAEZY,YAAAA,SAAS,EAAE;AAFC,WAAd;;AAKA,cAAI,KAAKzC,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAAnC,EAA6C;AAE3C,gBAAIiB,QAAQ,GAAGF,GAAG,CAAC,MAAD,CAAH,CAAY,UAAZ,CAAf;AAEA,gBAAIJ,IAAI,GAAGI,GAAG,CAAC,MAAD,CAAH,CAAY,WAAZ,CAAX;;AAEA,gBAAIJ,IAAI,KAAK,2BAAb,EAA0C;AACxC,mBAAKO,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACA,mBAAK1C,QAAL,CAAc;AACZc,gBAAAA,MAAM,EAAE;AADI,eAAd,EAEG,MAAM;AACP,qBAAKjB,KAAL,CAAWG,QAAX,CAAoB;AAClBU,kBAAAA,KAAK,EAAE,CAAC,KAAKb,KAAL,CAAWc,MAAX,CAAkBD;AADR,iBAApB;AAGD,eAND;AAOD,aATD,MAUK,IAAGuB,IAAI,KAAK,4BAAZ,EAAyC;AAC5C,mBAAKO,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACA,mBAAK1C,QAAL,CAAc;AACZc,gBAAAA,MAAM,EAAE;AADI,eAAd,EAEG,MAAM;AACP,qBAAKjB,KAAL,CAAWG,QAAX,CAAoB;AAClB2C,kBAAAA,SAAS,EAAE,CAAC,KAAK9C,KAAL,CAAWc,MAAX,CAAkBgC;AADZ,iBAApB;AAGD,eAND;AAOD,aATI,MAUA,IAAIJ,QAAQ,KAAK,KAAK1C,KAAL,CAAWc,MAAX,CAAkBiC,IAA/B,IAAuCL,QAAQ,KAAK,KAAK1C,KAAL,CAAWc,MAAX,CAAkBkC,IAA1E,EAAgF;AAEnF,mBAAKhD,KAAL,CAAWG,QAAX,CAAoB;AAClB8C,gBAAAA,SAAS,EAAE,CAAC,KAAKjD,KAAL,CAAWc,MAAX,CAAkBmC;AADZ,eAApB;AAID,aANI,MAOA;AACH,oBAAMC,SAAS,GAAGd,IAAI,CAAC,WAAD,CAAtB;AACA,oBAAMe,OAAO,GAAGf,IAAI,CAAC,SAAD,CAApB,CAFG,CAIH;;AACA,kBAAIgB,KAAJ;;AACA,kBAAIZ,GAAG,CAAC,MAAD,CAAH,CAAY,UAAZ,MAA4B,KAAhC,EAAuC;AACrCY,gBAAAA,KAAK,GAAG,CAAR;AACD,eAFD,MAGK,IAAIZ,GAAG,CAAC,MAAD,CAAH,CAAY,UAAZ,MAA4B,UAAhC,EAA4C;AAC/CY,gBAAAA,KAAK,GAAG,CAAR;AACD,eAFI,MAGA;AACHA,gBAAAA,KAAK,GAAG,CAAR;AACD,eAdE,CAgBH;;;AACA,oBAAMC,WAAW,GAAG,EAApB;AACAA,cAAAA,WAAW,CAACC,MAAZ,CAAmBzD,WAAnB;AACAwD,cAAAA,WAAW,CAACD,KAAD,CAAX,GAAqB,IAArB,CAnBG,CAqBH;;AACA,mBAAKjD,QAAL,CAAc;AACZoD,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,IAAI,EAAEpB,IAAI,CAAC,MAAD,CAAJ,CAAa,YAAb,CADF;AAEJqB,kBAAAA,aAAa,EAAErB,IAAI,CAAC,MAAD,CAAJ,CAAa,eAAb,CAFX;AAGJsB,kBAAAA,cAAc,EAAEtB,IAAI,CAAC,MAAD,CAAJ,CAAa,gBAAb,CAHZ;AAIJc,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAAT,GAAe,GAAf,GAAqBA,SAAS,CAAC,CAAD,CAA9B,GAAoC,GAApC,GAA0CA,SAAS,CAAC,CAAD,CAJ1D;AAKJS,kBAAAA,MAAM,EAAEvB,IAAI,CAAC,KAAD,CALR;AAMJwB,kBAAAA,IAAI,EAAExB,IAAI,CAAC,MAAD,CANN;AAOJyB,kBAAAA,IAAI,EAAEV,OAAO,CAAC,MAAD,CAPT;AAQJW,kBAAAA,MAAM,EAAEX,OAAO,CAAC,QAAD,CARX;AASJjD,kBAAAA,KAAK,EAAEiD,OAAO,CAAC,OAAD,CATV;AAUJY,kBAAAA,MAAM,EAAEZ,OAAO,CAAC,QAAD,CAVX;AAWJa,kBAAAA,KAAK,EAAE5B,IAAI,CAAC,SAAD;AAXP,iBADM;AAcZ6B,gBAAAA,OAAO,EAAEZ,WAdG;AAeZa,gBAAAA,QAAQ,EAAE,KAfE;AAgBZC,gBAAAA,SAAS,EAAE;AAhBC,eAAd,EAiBG,MAAM;AAEP,qBAAKC,OAAL;;AAEA,oBAAI,KAAKlE,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,uBAAKhB,KAAL,CAAWqE,aAAX,CAAyB,KAAKnE,KAAL,CAAWqD,IAApC;AACA,uBAAKvD,KAAL,CAAWG,QAAX,CAAoB;AAClBmE,oBAAAA,KAAK,EAAE9B,GAAG,CAAC,MAAD,CAAH,CAAY,UAAZ,CADW;AAElB+B,oBAAAA,MAAM,EAAE,KAAKrE,KAAL,CAAWqD,IAAX,CAAgBC,IAFN;AAGlBgB,oBAAAA,eAAe,EAAE,KAAKtE,KAAL,CAAWqD,IAAX,CAAgBE,aAHf;AAIlBgB,oBAAAA,gBAAgB,EAAE,KAAKvE,KAAL,CAAWqD,IAAX,CAAgBG,cAJhB;AAKlBgB,oBAAAA,WAAW,EAAE,KAAKxE,KAAL,CAAWqD,IAAX,CAAgBL,SALX;AAMlByB,oBAAAA,MAAM,EAAE,KAAKzE,KAAL,CAAWqD,IAAX,CAAgBK,IANN;AAOlBb,oBAAAA,IAAI,EAAEL,QAPY;AAQlBkC,oBAAAA,OAAO,EAAE,KAAK1E,KAAL,CAAWqD,IAAX,CAAgBS,KARP;AASlBa,oBAAAA,QAAQ,EAAE,KAAK3E,KAAL,CAAWqD,IAAX,CAAgBI,MATR;AAUlBmB,oBAAAA,MAAM,EAAE,KAAK5E,KAAL,CAAWqD,IAAX,CAAgBM,IAVN;AAWlBkB,oBAAAA,QAAQ,EAAE,KAAK7E,KAAL,CAAWqD,IAAX,CAAgBO,MAXR;AAYlBkB,oBAAAA,OAAO,EAAE,KAAK9E,KAAL,CAAWqD,IAAX,CAAgBrD,KAZP;AAalB+E,oBAAAA,QAAQ,EAAE,KAAK/E,KAAL,CAAWqD,IAAX,CAAgBQ,MAbR;AAclBmB,oBAAAA,IAAI,EAAE;AAdY,mBAApB;AAgBD,iBAlBD,MAkBO,IAAI,KAAKhF,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AACnC,uBAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAClBgF,oBAAAA,KAAK,EAAE3C,GAAG,CAAC,MAAD,CAAH,CAAY,UAAZ,CADW;AAElB4C,oBAAAA,MAAM,EAAE,KAAKlF,KAAL,CAAWqD,IAAX,CAAgBC,IAFN;AAGlB6B,oBAAAA,eAAe,EAAE,KAAKnF,KAAL,CAAWqD,IAAX,CAAgBE,aAHf;AAIlB6B,oBAAAA,gBAAgB,EAAE,KAAKpF,KAAL,CAAWqD,IAAX,CAAgBG,cAJhB;AAKlB6B,oBAAAA,WAAW,EAAE,KAAKrF,KAAL,CAAWqD,IAAX,CAAgBL,SALX;AAMlBsC,oBAAAA,MAAM,EAAE,KAAKtF,KAAL,CAAWqD,IAAX,CAAgBK,IANN;AAOlBZ,oBAAAA,IAAI,EAAEN,QAPY;AAQlB+C,oBAAAA,OAAO,EAAE,KAAKvF,KAAL,CAAWqD,IAAX,CAAgBS,KARP;AASlB0B,oBAAAA,QAAQ,EAAE,KAAKxF,KAAL,CAAWqD,IAAX,CAAgBI,MATR;AAUlBgC,oBAAAA,MAAM,EAAE,KAAKzF,KAAL,CAAWqD,IAAX,CAAgBM,IAVN;AAWlB+B,oBAAAA,QAAQ,EAAE,KAAK1F,KAAL,CAAWqD,IAAX,CAAgBO,MAXR;AAYlB+B,oBAAAA,OAAO,EAAE,KAAK3F,KAAL,CAAWqD,IAAX,CAAgBrD,KAZP;AAalB4F,oBAAAA,QAAQ,EAAE,KAAK5F,KAAL,CAAWqD,IAAX,CAAgBQ,MAbR;AAclBtB,oBAAAA,SAAS,EAAE,IAdO;AAelBsD,oBAAAA,aAAa,EAAE,IAfG;AAgBlBC,oBAAAA,aAAa,EAAE,IAhBG;AAiBlBC,oBAAAA,UAAU,EAAE,IAjBM;AAkBlBC,oBAAAA,SAAS,EAAE,IAlBO;AAmBlBC,oBAAAA,WAAW,EAAE,IAnBK;AAoBlBC,oBAAAA,UAAU,EAAE,IApBM;AAqBlBC,oBAAAA,WAAW,EAAE,IArBK;AAsBlBC,oBAAAA,WAAW,EAAE,IAtBK;AAuBlBC,oBAAAA,UAAU,EAAE,IAvBM;AAwBlBC,oBAAAA,SAAS,EAAE;AAxBO,mBAApB;AA0BD;AACF,eAnED;AAoED;AACF,WA5HD,MA6HK;AAEH,gBAAIpE,IAAI,GAAGI,GAAG,CAAC,MAAD,CAAd;AAEA,gBAAIiE,QAAQ,GAAGrE,IAAI,CAAC,MAAD,CAAnB;AAEA,iBAAKjC,QAAL,CAAc;AACZsG,cAAAA;AADY,aAAd;;AAIA,gBAAI,KAAKzG,KAAL,CAAWc,MAAX,CAAkB4F,aAAlB,KAAoCD,QAAxC,EAAkD;AAChDE,cAAAA,KAAK,CAAC,gDAAD,CAAL;AACA,mBAAKxG,QAAL,CAAc;AACZc,gBAAAA,MAAM,EAAE;AADI,eAAd;AAGD,aALD,MAMK;AACH,mBAAKjB,KAAL,CAAWG,QAAX,CAAoB;AAClBuG,gBAAAA,aAAa,EAAED;AADG,eAApB;;AAIA,kBAAIA,QAAQ,KAAK,MAAjB,EAAyB;AAEvB,sBAAMpD,WAAW,GAAG,EAApB;AACAA,gBAAAA,WAAW,CAACC,MAAZ,CAAmBzD,WAAnB;AACAwD,gBAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,IAAjB;AACA,sBAAMuD,WAAW,GAAGxE,IAAI,CAAC,UAAD,CAAJ,CAAiByE,MAArC;AAEA,oBAAIC,aAAa,GAAG,EAApB;;AAEA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAApB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,sBAAIC,MAAM,GAAG,CACX5E,IAAI,CAAC,UAAD,CAAJ,CAAiB2E,CAAjB,CADW,EAEX,EAFW,EAGX,KAHW,CAAb;AAKAD,kBAAAA,aAAa,CAACG,IAAd,CAAmBD,MAAnB;AACD;;AACD,qBAAK7G,QAAL,CAAc;AACZP,kBAAAA,QAAQ,EAAEkH,aADE;AAEZ7C,kBAAAA,OAAO,EAAEZ,WAFG;AAGZa,kBAAAA,QAAQ,EAAE,KAHE;AAIZC,kBAAAA,SAAS,EAAE;AAJC,iBAAd,EAKG,MAAM;AACP,uBAAKC,OAAL;AACD,iBAPD;AAQD,eAzBD,MA0BK;AAEH,sBAAMf,WAAW,GAAG,EAApB;AACAA,gBAAAA,WAAW,CAACC,MAAZ,CAAmBzD,WAAnB;AACAwD,gBAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,IAAjB;AAEA,qBAAKlD,QAAL,CAAc;AACZ+G,kBAAAA,KAAK,EAAE;AACL9H,oBAAAA,UAAU,EAAEgD,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,CADP;AAELe,oBAAAA,OAAO,EAAE;AACPU,sBAAAA,IAAI,EAAEzB,IAAI,CAAC,SAAD,CAAJ,CAAgB,MAAhB,CADC;AAEP0B,sBAAAA,MAAM,EAAE1B,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAFD;AAGPlC,sBAAAA,KAAK,EAAEkC,IAAI,CAAC,SAAD,CAAJ,CAAgB,OAAhB,CAHA;AAIP2B,sBAAAA,MAAM,EAAE3B,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAJD;AAKP+E,sBAAAA,GAAG,EAAE/E,IAAI,CAAC,SAAD,CAAJ,CAAgB,KAAhB;AALE,qBAFJ;AASL/C,oBAAAA,aAAa,EAAE+C,IAAI,CAAC,eAAD,CATd;AAUL9C,oBAAAA,OAAO,EAAE8C,IAAI,CAAC,gBAAD,CAVR;AAWL7C,oBAAAA,WAAW,EAAE6C,IAAI,CAAC,qBAAD,CAXZ;AAYL3C,oBAAAA,GAAG,EAAE2C,IAAI,CAAC,KAAD,CAZJ;AAaL5C,oBAAAA,QAAQ,EAAE4C,IAAI,CAAC,0BAAD,CAbT;AAcL1C,oBAAAA,MAAM,EAAE0C,IAAI,CAAC,QAAD,CAdP;AAeLzC,oBAAAA,SAAS,EAAEyC,IAAI,CAAC,WAAD;AAfV,mBADK;AAkBZ6B,kBAAAA,OAAO,EAAEZ,WAlBG;AAmBZa,kBAAAA,QAAQ,EAAE,KAnBE;AAoBZC,kBAAAA,SAAS,EAAE;AApBC,iBAAd,EAqBG,MAAM;AACP,uBAAKC,OAAL;AACA,uBAAKpE,KAAL,CAAWG,QAAX,CAAoB;AAClB+G,oBAAAA,KAAK,EAAE;AACL9H,sBAAAA,UAAU,EAAEgD,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,CADP;AAELe,sBAAAA,OAAO,EAAE;AACPU,wBAAAA,IAAI,EAAEzB,IAAI,CAAC,SAAD,CAAJ,CAAgB,MAAhB,CADC;AAEP0B,wBAAAA,MAAM,EAAE1B,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAFD;AAGPlC,wBAAAA,KAAK,EAAEkC,IAAI,CAAC,SAAD,CAAJ,CAAgB,OAAhB,CAHA;AAIP2B,wBAAAA,MAAM,EAAE3B,IAAI,CAAC,SAAD,CAAJ,CAAgB,QAAhB,CAJD;AAKP+E,wBAAAA,GAAG,EAAE/E,IAAI,CAAC,SAAD,CAAJ,CAAgB,KAAhB;AALE,uBAFJ;AASL/C,sBAAAA,aAAa,EAAE+C,IAAI,CAAC,eAAD,CATd;AAUL9C,sBAAAA,OAAO,EAAE8C,IAAI,CAAC,gBAAD,CAVR;AAWL7C,sBAAAA,WAAW,EAAE6C,IAAI,CAAC,qBAAD,CAXZ;AAYL3C,sBAAAA,GAAG,EAAE2C,IAAI,CAAC,KAAD,CAZJ;AAaL5C,sBAAAA,QAAQ,EAAE4C,IAAI,CAAC,0BAAD,CAbT;AAcL1C,sBAAAA,MAAM,EAAE0C,IAAI,CAAC,QAAD,CAdP;AAeLzC,sBAAAA,SAAS,EAAEyC,IAAI,CAAC,WAAD;AAfV;AADW,mBAApB;AAmBD,iBA1CD;AA2CD;AACF;AAEF;AACF,SA5OD;AA6OD,OAzPD,MAyPO;AACLuE,QAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,KAlakB;;AAAA,SAibnBvC,OAjbmB,GAibT,MAAM;AACd,WAAKjE,QAAL,CAAc;AACZiH,QAAAA,IAAI,EAAE,IADM;AAEZvF,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAtbkB;;AAAA,SAwbnBwF,QAxbmB,GAwbR,MAAM;AACf,UAAIC,aAAa,GAAG,EAApB;AAEA,WAAKpH,KAAL,CAAWN,QAAX,CAAoB2H,OAApB,CAA4B,UAAUC,OAAV,EAAmB;AAC7C,YAAIA,OAAO,CAAC,CAAD,CAAX,EAAgB;AACdF,UAAAA,aAAa,CAACL,IAAd,CAAmBO,OAAnB;AACD;AACF,OAJD;AAMA,WAAKxH,KAAL,CAAWG,QAAX,CAAoB;AAClBP,QAAAA,QAAQ,EAAE0H;AADQ,OAApB;AAID,KArckB;;AAAA,SAucnBG,SAvcmB,GAucP,MAAM;AAChB,WAAKtH,QAAL,CAAc;AACZc,QAAAA,MAAM,EAAE,KADI;AAEZgD,QAAAA,OAAO,EAAEpE,WAFG;AAGZ0B,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKA,WAAKoB,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACD,KA9ckB;;AAAA,SAgdnB6E,UAhdmB,GAgdN,MAAM;AACjB,WAAKvH,QAAL,CAAc;AACZoD,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,aAAa,EAAE,EAA3B;AAA+BC,UAAAA,cAAc,EAAE,EAA/C;AAAmDG,UAAAA,IAAI,EAAE,EAAzD;AAA6DC,UAAAA,MAAM,EAAE,EAArE;AAAyE5D,UAAAA,KAAK,EAAE,EAAhF;AAAoF6D,UAAAA,MAAM,EAAE,EAA5F;AAAgGJ,UAAAA,MAAM,EAAE,EAAxG;AAA4GK,UAAAA,KAAK,EAAE,EAAnH;AAAuHJ,UAAAA,IAAI,EAAE,EAA7H;AAAiIV,UAAAA,SAAS,EAAE;AAA5I,SADM;AAEZgE,QAAAA,KAAK,EAAEhI,SAFK;AAGZgF,QAAAA,QAAQ,EAAE;AAHE,OAAd,EAIG,MAAM;AACP,YAAI,KAAKhE,KAAL,CAAWc,OAAX,KAAuB,CAAvB,IAA4B,KAAKhB,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAA/D,EAAyE;AAEvE,eAAKzB,KAAL,CAAWG,QAAX,CAAoB;AAClB+E,YAAAA,IAAI,EAAE,IADY;AAElByC,YAAAA,QAAQ,EAAE,UAFQ;AAGlBrD,YAAAA,KAAK,EAAE,EAHW;AAIlBvB,YAAAA,IAAI,EAAE,EAJY;AAKlB4B,YAAAA,MAAM,EAAE,EALU;AAMlBJ,YAAAA,MAAM,EAAE,EANU;AAOlBC,YAAAA,eAAe,EAAE,EAPC;AAQlBC,YAAAA,gBAAgB,EAAE,EARA;AASlBC,YAAAA,WAAW,EAAE,EATK;AAUlBG,YAAAA,QAAQ,EAAE,EAVQ;AAWlBpC,YAAAA,SAAS,EAAE,IAXO;AAYlBsD,YAAAA,aAAa,EAAE,IAZG;AAalBC,YAAAA,aAAa,EAAE,IAbG;AAclBC,YAAAA,UAAU,EAAE,IAdM;AAelBC,YAAAA,SAAS,EAAE,IAfO;AAgBlBC,YAAAA,WAAW,EAAE,IAhBK;AAiBlBC,YAAAA,UAAU,EAAE,IAjBM;AAkBlBC,YAAAA,WAAW,EAAE,IAlBK;AAmBlBC,YAAAA,WAAW,EAAE,IAnBK;AAoBlBC,YAAAA,UAAU,EAAE,IApBM;AAqBlBC,YAAAA,SAAS,EAAE;AArBO,WAApB;AAuBD,SAzBD,MA0BK,IAAI,KAAKtG,KAAL,CAAWc,OAAX,KAAuB,CAAvB,IAA4B,KAAKhB,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAA/D,EAAyE;AAC5E,eAAKzB,KAAL,CAAWG,QAAX,CAAoB;AAClB+E,YAAAA,IAAI,EAAE,IADY;AAElBC,YAAAA,KAAK,EAAE,EAFW;AAGlBnC,YAAAA,IAAI,EAAE,EAHY;AAIlBwC,YAAAA,MAAM,EAAE,EAJU;AAKlBJ,YAAAA,MAAM,EAAE,EALU;AAMlBC,YAAAA,eAAe,EAAE,EANC;AAOlBC,YAAAA,gBAAgB,EAAE,EAPA;AAQlBC,YAAAA,WAAW,EAAE,EARK;AASlBG,YAAAA,QAAQ,EAAE,EATQ;AAUlBjD,YAAAA,SAAS,EAAE,IAVO;AAWlBsD,YAAAA,aAAa,EAAE,IAXG;AAYlBC,YAAAA,aAAa,EAAE,IAZG;AAalBC,YAAAA,UAAU,EAAE,IAbM;AAclBC,YAAAA,SAAS,EAAE,IAdO;AAelBC,YAAAA,WAAW,EAAE,IAfK;AAgBlBC,YAAAA,UAAU,EAAE,IAhBM;AAiBlBC,YAAAA,WAAW,EAAE,IAjBK;AAkBlBC,YAAAA,WAAW,EAAE,IAlBK;AAmBlBC,YAAAA,UAAU,EAAE,IAnBM;AAoBlBC,YAAAA,SAAS,EAAE;AApBO,WAApB;AAsBD,SAvBI,MAuBE;AACL,eAAKxG,KAAL,CAAWG,QAAX,CAAoB;AAClBuG,YAAAA,aAAa,EAAE;AADG,WAApB;AAGD;AACF,OA3DD;AA4DD,KA7gBkB;;AAAA,SA+gBnBkB,WA/gBmB,GA+gBJvH,KAAD,IAAW;AACvB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,eAAD,CAAV,GAA8BxH,KAAK,CAACE,MAAN,CAAasC,KAA3C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AACzC,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AACD,OAFD;AAGD,KArhBkB;;AAAA,SAuhBnBC,WAvhBmB,GAuhBJzH,KAAD,IAAW;AACvB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,SAAD,CAAV,CAAsB,MAAtB,IAAgCxH,KAAK,CAACE,MAAN,CAAasC,KAA7C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA3hBkB;;AAAA,SA6hBnBE,aA7hBmB,GA6hBF1H,KAAD,IAAW;AACzB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,SAAD,CAAV,CAAsB,QAAtB,IAAkCxH,KAAK,CAACE,MAAN,CAAasC,KAA/C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAjiBkB;;AAAA,SAmiBnBG,YAniBmB,GAmiBH3H,KAAD,IAAW;AACxB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,SAAD,CAAV,CAAsB,OAAtB,IAAiCxH,KAAK,CAACE,MAAN,CAAasC,KAA9C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAviBkB;;AAAA,SAyiBnBI,aAziBmB,GAyiBF5H,KAAD,IAAW;AACzB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,SAAD,CAAV,CAAsB,QAAtB,IAAkCxH,KAAK,CAACE,MAAN,CAAasC,KAA/C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA7iBkB;;AAAA,SA+iBnBK,iBA/iBmB,GA+iBE7H,KAAD,IAAW;AAC7B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,YAAD,CAAV,GAA2BxH,KAAK,CAACE,MAAN,CAAasC,KAAxC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAnjBkB;;AAAA,SAqjBnBM,UArjBmB,GAqjBL9H,KAAD,IAAW;AACtB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,KAAD,CAAV,GAAoBxH,KAAK,CAACE,MAAN,CAAasC,KAAjC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAzjBkB;;AAAA,SA2jBnBO,aA3jBmB,GA2jBF/H,KAAD,IAAW;AACzB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,QAAD,CAAV,GAAuBxH,KAAK,CAACE,MAAN,CAAasC,KAApC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA/jBkB;;AAAA,SAikBnBQ,gBAjkBmB,GAikBChI,KAAD,IAAW;AAC5B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BxH,KAAK,CAACE,MAAN,CAAasC,KAAvC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KArkBkB;;AAAA,SAukBnBS,aAvkBmB,GAukBFjI,KAAD,IAAW;AACzB,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,SAAD,CAAV,GAAwBxH,KAAK,CAACE,MAAN,CAAasC,KAArC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA3kBkB;;AAAA,SA6kBnBU,iBA7kBmB,GA6kBElI,KAAD,IAAW;AAC7B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,UAAD,CAAV,CAAuB,CAAvB,IAA4BxH,KAAK,CAACE,MAAN,CAAasC,KAAzC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAjlBkB;;AAAA,SAmlBnBW,mBAnlBmB,GAmlBInI,KAAD,IAAW;AAC/B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,UAAD,CAAV,CAAuB,CAAvB,IAA4BxH,KAAK,CAACE,MAAN,CAAasC,KAAzC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAvlBkB;;AAAA,SAylBnBY,kBAzlBmB,GAylBGpI,KAAD,IAAW;AAC9B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,UAAD,CAAV,CAAuB,CAAvB,IAA4BxH,KAAK,CAACE,MAAN,CAAasC,KAAzC;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA7lBkB;;AAAA,SA+lBnBa,gBA/lBmB,GA+lBCrI,KAAD,IAAW;AAC5B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,aAAD,CAAV,CAA0B,CAA1B,IAA+BxH,KAAK,CAACE,MAAN,CAAasC,KAA5C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAnmBkB;;AAAA,SAqmBnBc,kBArmBmB,GAqmBGtI,KAAD,IAAW;AAC9B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,aAAD,CAAV,CAA0B,CAA1B,IAA+BxH,KAAK,CAACE,MAAN,CAAasC,KAA5C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KAzmBkB;;AAAA,SA2mBnBe,iBA3mBmB,GA2mBEvI,KAAD,IAAW;AAC7B,UAAIwH,UAAU,GAAG,KAAK3H,KAAL,CAAWgH,KAA5B;AACAW,MAAAA,UAAU,CAAC,aAAD,CAAV,CAA0B,CAA1B,IAA+BxH,KAAK,CAACE,MAAN,CAAasC,KAA5C;AACA,WAAK1C,QAAL,CAAc;AAAE+G,QAAAA,KAAK,EAAEW;AAAT,OAAd,EAAqC,MAAM;AAAE,aAAK7H,KAAL,CAAWG,QAAX,CAAoB;AAAE+G,UAAAA,KAAK,EAAEW;AAAT,SAApB;AAA4C,OAAzF;AACD,KA/mBkB;;AAAA,SAinBnBgB,cAjnBmB,GAinBDxI,KAAD,IAAW;AAC1B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBzI,KAAK,CAACE,MAAN,CAAasC,KAAjC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEoE,YAAAA,MAAM,EAAE,KAAKrE,KAAL,CAAWqD,IAAX,CAAgBC,IAA1B;AAAgCf,YAAAA,SAAS,EAAE,IAA3C;AAAiDyC,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD,SAFD,MAEO;AACL,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEiF,YAAAA,MAAM,EAAE,KAAKlF,KAAL,CAAWqD,IAAX,CAAgBC,IAA1B;AAAgCf,YAAAA,SAAS,EAAE,IAA3C;AAAiDyC,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD;AACF,OAND;AAOD,KA3nBkB;;AAAA,SA6nBnB6D,kBA7nBmB,GA6nBG1I,KAAD,IAAW;AAC9B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,eAAD,CAAT,GAA6BzI,KAAK,CAACE,MAAN,CAAasC,KAA1C;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEqE,YAAAA,eAAe,EAAE,KAAKtE,KAAL,CAAWqD,IAAX,CAAgBE,aAAnC;AAAkDsC,YAAAA,aAAa,EAAE,IAAjE;AAAuEb,YAAAA,IAAI,EAAE;AAA7E,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEkF,YAAAA,eAAe,EAAE,KAAKnF,KAAL,CAAWqD,IAAX,CAAgBE,aAAnC;AAAkDsC,YAAAA,aAAa,EAAE,IAAjE;AAAuEb,YAAAA,IAAI,EAAE;AAA7E,WAApB;AACD;AACF,OAPD;AAQD,KAxoBkB;;AAAA,SA0oBnB8D,oBA1oBmB,GA0oBK3I,KAAD,IAAW;AAChC,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,gBAAD,CAAT,GAA8BzI,KAAK,CAACE,MAAN,CAAasC,KAA3C;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEsE,YAAAA,gBAAgB,EAAE,KAAKvE,KAAL,CAAWqD,IAAX,CAAgBG,cAApC;AAAoDsC,YAAAA,aAAa,EAAE,IAAnE;AAAyEd,YAAAA,IAAI,EAAE;AAA/E,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEmF,YAAAA,gBAAgB,EAAE,KAAKpF,KAAL,CAAWqD,IAAX,CAAgBG,cAApC;AAAoDsC,YAAAA,aAAa,EAAE,IAAnE;AAAyEd,YAAAA,IAAI,EAAE;AAA/E,WAApB;AACD;AACF,OAPD;AAQD,KArpBkB;;AAAA,SAupBnB+D,YAvpBmB,GAupBH5I,KAAD,IAAW;AACxB,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,WAAD,CAAT,GAAyBzI,KAAK,CAACE,MAAN,CAAasC,KAAtC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEuE,YAAAA,WAAW,EAAE,KAAKxE,KAAL,CAAWqD,IAAX,CAAgBL,SAA/B;AAA0C+C,YAAAA,UAAU,EAAE,IAAtD;AAA4Df,YAAAA,IAAI,EAAE;AAAlE,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEoF,YAAAA,WAAW,EAAE,KAAKrF,KAAL,CAAWqD,IAAX,CAAgBL,SAA/B;AAA0C+C,YAAAA,UAAU,EAAE,IAAtD;AAA4Df,YAAAA,IAAI,EAAE;AAAlE,WAApB;AACD;AACF,OAPD;AAQD,KAlqBkB;;AAAA,SAoqBnBgE,cApqBmB,GAoqBD7I,KAAD,IAAW;AAC1B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBzI,KAAK,CAACE,MAAN,CAAasC,KAAjC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAE2E,YAAAA,MAAM,EAAE,KAAK5E,KAAL,CAAWqD,IAAX,CAAgBM,IAA1B;AAAgCqC,YAAAA,SAAS,EAAE,IAA3C;AAAiDhB,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEwF,YAAAA,MAAM,EAAE,KAAKzF,KAAL,CAAWqD,IAAX,CAAgBM,IAA1B;AAAgCqC,YAAAA,SAAS,EAAE,IAA3C;AAAiDhB,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD;AACF,OAPD;AAQD,KA/qBkB;;AAAA,SAirBnBiE,gBAjrBmB,GAirBC9I,KAAD,IAAW;AAC5B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBzI,KAAK,CAACE,MAAN,CAAasC,KAAnC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAE4E,YAAAA,QAAQ,EAAE,KAAK7E,KAAL,CAAWqD,IAAX,CAAgBO,MAA5B;AAAoCqC,YAAAA,WAAW,EAAE,IAAjD;AAAuDjB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEyF,YAAAA,QAAQ,EAAE,KAAK1F,KAAL,CAAWqD,IAAX,CAAgBO,MAA5B;AAAoCqC,YAAAA,WAAW,EAAE,IAAjD;AAAuDjB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD;AACF,OAPD;AAQD,KA5rBkB;;AAAA,SA6rBnBkE,eA7rBmB,GA6rBA/I,KAAD,IAAW;AAC3B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBzI,KAAK,CAACE,MAAN,CAAasC,KAAlC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAE6E,YAAAA,OAAO,EAAE,KAAK9E,KAAL,CAAWqD,IAAX,CAAgBrD,KAA3B;AAAkCkG,YAAAA,UAAU,EAAE,IAA9C;AAAoDlB,YAAAA,IAAI,EAAE;AAA1D,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAE0F,YAAAA,OAAO,EAAE,KAAK3F,KAAL,CAAWqD,IAAX,CAAgBrD,KAA3B;AAAkCkG,YAAAA,UAAU,EAAE,IAA9C;AAAoDlB,YAAAA,IAAI,EAAE;AAA1D,WAApB;AACD;AACF,OAPD;AAQD,KAxsBkB;;AAAA,SAysBnBmE,gBAzsBmB,GAysBChJ,KAAD,IAAW;AAC5B,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBzI,KAAK,CAACE,MAAN,CAAasC,KAAnC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAE8E,YAAAA,QAAQ,EAAE,KAAK/E,KAAL,CAAWqD,IAAX,CAAgBQ,MAA5B;AAAoCsC,YAAAA,WAAW,EAAE,IAAjD;AAAuDnB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAE2F,YAAAA,QAAQ,EAAE,KAAK5F,KAAL,CAAWqD,IAAX,CAAgBQ,MAA5B;AAAoCsC,YAAAA,WAAW,EAAE,IAAjD;AAAuDnB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD;AACF,OAPD;AAQD,KAptBkB;;AAAA,SAstBnBoE,aAttBmB,GAstBFjJ,KAAD,IAAW;AACzB,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBzI,KAAK,CAACE,MAAN,CAAasC,KAAnC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAE0E,YAAAA,QAAQ,EAAE,KAAK3E,KAAL,CAAWqD,IAAX,CAAgBI,MAA5B;AAAoC2C,YAAAA,WAAW,EAAE,IAAjD;AAAuDpB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEuF,YAAAA,QAAQ,EAAE,KAAKxF,KAAL,CAAWqD,IAAX,CAAgBI,MAA5B;AAAoC2C,YAAAA,WAAW,EAAE,IAAjD;AAAuDpB,YAAAA,IAAI,EAAE;AAA7D,WAApB;AACD;AACF,OAPD;AAQD,KAjuBkB;;AAAA,SAmuBnBqE,YAnuBmB,GAmuBHlJ,KAAD,IAAW;AACxB,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBzI,KAAK,CAACE,MAAN,CAAasC,KAAlC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEyE,YAAAA,OAAO,EAAE,KAAK1E,KAAL,CAAWqD,IAAX,CAAgBS,KAA3B;AAAkCuC,YAAAA,UAAU,EAAE,IAA9C;AAAoDrB,YAAAA,IAAI,EAAE;AAA1D,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEsF,YAAAA,OAAO,EAAE,KAAKvF,KAAL,CAAWqD,IAAX,CAAgBS,KAA3B;AAAkCuC,YAAAA,UAAU,EAAE,IAA9C;AAAoDrB,YAAAA,IAAI,EAAE;AAA1D,WAApB;AACD;AACF,OAPD;AAQD,KA9uBkB;;AAAA,SAgvBnBsE,WAhvBmB,GAgvBJnJ,KAAD,IAAW;AACvB,UAAIyI,SAAS,GAAG,KAAK5I,KAAL,CAAWqD,IAA3B;AACAuF,MAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBzI,KAAK,CAACE,MAAN,CAAasC,KAAjC;AACA,WAAK1C,QAAL,CAAc;AAAEoD,QAAAA,IAAI,EAAEuF;AAAR,OAAd,EAAmC,MAAM;AACvC,YAAI,KAAK5I,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,eAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEwE,YAAAA,MAAM,EAAE,KAAKzE,KAAL,CAAWqD,IAAX,CAAgBK,IAA1B;AAAgC4C,YAAAA,SAAS,EAAE,IAA3C;AAAiDtB,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD,SAFD,MAGK;AACH,eAAKlF,KAAL,CAAWG,QAAX,CAAoB;AAAEqF,YAAAA,MAAM,EAAE,KAAKtF,KAAL,CAAWqD,IAAX,CAAgBK,IAA1B;AAAgC4C,YAAAA,SAAS,EAAE,IAA3C;AAAiDtB,YAAAA,IAAI,EAAE;AAAvD,WAApB;AACD;AACF,OAPD;AAQD,KA3vBkB;;AAAA,SA6vBnBuE,MA7vBmB,GA6vBV,MAAM;AACb,WAAKtJ,QAAL,CAAcuJ,SAAS,KAAK;AAC1BC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADG,OAAL,CAAvB;AAGD,KAjwBkB;;AAGjB,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AAEA,SAAKlH,QAAL,GAAgBxE,KAAK,CAAC2L,SAAN,EAAhB;AAEA,SAAK5J,KAAL,GAAa;AACXS,MAAAA,WAAW,EAAE,EADF;AAEXoJ,MAAAA,aAAa,EAAE,IAFJ;AAGXxI,MAAAA,KAAK,EAAE,EAHI;AAIXoI,MAAAA,UAAU,EAAE,KAJD;AAKX9H,MAAAA,OAAO,EAAE,QALE;AAMX4E,MAAAA,QAAQ,EAAE,EANC;AAOXvC,MAAAA,QAAQ,EAAE,IAPC;AAQXC,MAAAA,SAAS,EAAE,EARA;AASXlD,MAAAA,MAAM,EAAE,KATG;AAUXD,MAAAA,OAAO,EAAE,CAVE;AAWXiD,MAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAXE;AAYX+F,MAAAA,aAAa,EAAE,CAAC;AACdzI,QAAAA,KAAK,EAAE,MADO;AAEd0I,QAAAA,YAAY,EAAE;AAFA,OAAD,EAGZ;AACD1I,QAAAA,KAAK,EAAE,UADN;AAED0I,QAAAA,YAAY,EAAE;AAFb,OAHY,EAMZ;AACD1I,QAAAA,KAAK,EAAE,WADN;AAED0I,QAAAA,YAAY,EAAE;AAFb,OANY,EASZ;AACD1I,QAAAA,KAAK,EAAE,OADN;AAED0I,QAAAA,YAAY,EAAE;AAFb,OATY,EAYZ;AACD1I,QAAAA,KAAK,EAAE,MADN;AAED0I,QAAAA,YAAY,EAAE;AAFb,OAZY,CAZJ;AA4BX3J,MAAAA,IAAI,EAAE,EA5BK;AA6BXG,MAAAA,GAAG,EAAE,KA7BM;AA8BX2G,MAAAA,IAAI,EAAE,KA9BK;AA+BX;AACA7D,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,EADF;AAEJC,QAAAA,aAAa,EAAE,EAFX;AAGJC,QAAAA,cAAc,EAAE,EAHZ;AAIJG,QAAAA,IAAI,EAAE,EAJF;AAKJC,QAAAA,MAAM,EAAE,EALJ;AAMJ5D,QAAAA,KAAK,EAAE,EANH;AAOJ6D,QAAAA,MAAM,EAAE,EAPJ;AAQJJ,QAAAA,MAAM,EAAE,EARJ;AASJK,QAAAA,KAAK,EAAE,EATH;AAUJJ,QAAAA,IAAI,EAAE,EAVF;AAWJV,QAAAA,SAAS,EAAE;AAXP,OAhCK;AA6CX;AACAgE,MAAAA,KAAK,EAAE;AACL/H,QAAAA,OAAO,EAAE;AACP0E,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,MAAM,EAAE,EAFD;AAGP5D,UAAAA,KAAK,EAAE,EAHA;AAIP6D,UAAAA,MAAM,EAAE,EAJD;AAKPoD,UAAAA,GAAG,EAAE;AALE,SADJ;AAQL/H,QAAAA,UAAU,EAAE,EARP;AASLC,QAAAA,aAAa,EAAE,EATV;AAULC,QAAAA,OAAO,EAAE,EAVJ;AAWLC,QAAAA,WAAW,EAAE;AACX,aAAG,EADQ;AAEX,aAAG,EAFQ;AAGX,aAAG;AAHQ,SAXR;AAgBLC,QAAAA,QAAQ,EAAE;AACR,aAAG,EADK;AAER,aAAG,EAFK;AAGR,aAAG;AAHK,SAhBL;AAqBLC,QAAAA,GAAG,EAAE,EArBA;AAsBLC,QAAAA,MAAM,EAAE,EAtBH;AAuBLC,QAAAA,SAAS,EAAE;AAvBN,OA9CI;AAuEXC,MAAAA,QAAQ,EAAE;AAvEC,KAAb;AAyED;;AAMDsK,EAAAA,iBAAiB,GAAG;AAClB,SAAK/J,QAAL,CAAc;AAAEa,MAAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWmK;AAAtB,KAAd;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKpK,KAAL,CAAWc,MAAX,CAAkBuJ,OAAlB,IAA6B,KAAKrK,KAAL,CAAWc,MAAX,CAAkBC,MAAlB,KAA6B,KAAKb,KAAL,CAAWc,OAAzE,EAAkF;AAChF,WAAKhB,KAAL,CAAWG,QAAX,CAAoB;AAAEkK,QAAAA,OAAO,EAAE;AAAX,OAApB;AAEA,WAAKlK,QAAL,CAAc;AACZc,QAAAA,MAAM,EAAE,KADI;AAEZgD,QAAAA,OAAO,EAAEpE,WAFG;AAGZ0B,QAAAA,KAAK,EAAE;AAHK,OAAd,EAIG,MAAM;AACP,aAAKnB,gBAAL,CAAsB,KAAKF,KAAL,CAAWS,WAAjC;AAED,OAPD;AAQD;AACF,GAzGkC,CA2GnC;;;AA2TAiJ,EAAAA,SAAS,CAACxG,KAAD,EAAQ;AACf,UAAMa,OAAO,GAAG,KAAK/D,KAAL,CAAW+D,OAAX,CAAmBqG,GAAnB,CAAuB,CAACC,QAAD,EAAWxD,CAAX,KAAiB;AACtD,UAAIA,CAAC,KAAK3D,KAAV,EAAiB;AACf,eAAO,CAACmH,QAAR;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF,KANe,CAAhB;AAOA,SAAKpK,QAAL,CAAc;AACZ8D,MAAAA;AADY,KAAd;AAGD;;AAoVDuG,EAAAA,MAAM,GAAG;AAAA,UACCjH,IADD,GACU,KAAKrD,KADf,CACCqD,IADD;AAAA,UAEC2D,KAFD,GAEW,KAAKhH,KAFhB,CAECgH,KAFD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKhH,KAAL,CAAWyJ,UAA1B;AAAsC,MAAA,MAAM,EAAE,KAAKF,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKvJ,KAAL,CAAWqB,KAArB;AAA4B,MAAA,MAAM,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAC,MAAhD;AAAuD,MAAA,OAAO,EAAE,KAAKkI,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,0BAAmB,KAAKzJ,KAAL,CAAWyK,aAA9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE,kBAAkB,KAAKvK,KAAL,CAAW2B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAE6I,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACwD,GADxD,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKlD,SAAtB;AAAiC,MAAA,SAAS,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,EASE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAiE,KAAKzH,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAA/B,IAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA5G,EACG,KAAKzB,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,OAA/B,IAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAD7C,CATF,EAWE;AAAO,MAAA,QAAQ,EAAE,KAAKrB,gBAAtB;AAAwC,MAAA,GAAG,EAAE,KAAKuC,QAAlD;AAA4D,MAAA,IAAI,EAAC,MAAjE;AAAwE,MAAA,MAAM,EAAC,4CAA/E;AAA4H,MAAA,SAAS,EAAC,aAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKzC,KAAL,CAAW8J,aAAX,CAAyBM,GAAzB,CAA6B,CAAC5J,IAAD,EAAO0C,KAAP,KAAiB;AAC5C,aAEE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlD,KAAL,CAAW+D,OAAX,CAAmBb,KAAnB,KACC;AAAK,QAAA,GAAG,0BAAmBA,KAAnB,cAA4B,KAAKlD,KAAL,CAAWc,OAAvC,CAAR;AAA0D,QAAA,SAAS,4BAAqB,KAAKd,KAAL,CAAW+D,OAAX,CAAmBb,KAAnB,IAA4B,WAA5B,GAA0C,EAA/D,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAO,QAAA,OAAO,EAAE,KAAKlD,KAAL,CAAW+D,OAAX,CAAmBb,KAAnB,CAAhB;AAA2C,QAAA,QAAQ,EAAE,MAAM,KAAKwG,SAAL,CAAexG,KAAf,CAA3D;AAAkF,QAAA,SAAS,EAAC,OAA5F;AAAoG,QAAA,IAAI,EAAC,UAAzG;AAAoH,QAAA,QAAQ,MAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAOE;AAAK,QAAA,SAAS,yBAAkB1C,IAAI,CAACa,KAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4Bb,IAAI,CAACuJ,YAAjC,CARF,CAFJ,CAFF;AAiBD,KAlBD,CAFJ,EAsBG,CAAC,KAAK/J,KAAL,CAAWO,GAAZ,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWe,MAAX,IACC;AAAK,MAAA,KAAK,EAAE;AAAE2J,QAAAA,WAAW,EAAE;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,CADF,EAEE;AAAK,MAAA,GAAG,EAAE,KAAK1K,KAAL,CAAWqB,KAArB;AAA4B,MAAA,QAAQ,EAAC,QAArC;AAA8C,MAAA,SAAS,EAAC,yBAAxD;AAAkF,MAAA,MAAM,EAAC,OAAzF;AAAiG,MAAA,OAAO,EAAE,KAAKkI,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ,CAvBJ,CADF,CAZF,CAJF,EAsDE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAK/B,UAAtB;AAAkC,MAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAMG,KAAK1H,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,QAA/B,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWc,MAAX,CAAkB+J,UAAlE;AAA8E,MAAA,KAAK,EAAC,YAApF;AAAiG,MAAA,aAAa,EAAC,OAA/G;AAAuH,MAAA,OAAO,EAAC,qBAA/H;AAAkJ,MAAA,QAAQ,EAAE,KAAKhC,cAAjK;AAAiL,MAAA,IAAI,EAAC,MAAtL;AAA6L,MAAA,KAAK,EAAEtF,IAAI,CAACC,IAAzM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKxD,KAAL,CAAWc,MAAX,CAAkBgK,cAAlE;AAAkF,MAAA,KAAK,EAAC,mBAAxF;AAA4G,MAAA,aAAa,EAAC,OAA1H;AAAkI,MAAA,OAAO,EAAC,qBAA1I;AAA6J,MAAA,QAAQ,EAAE,KAAK/B,kBAA5K;AAAgM,MAAA,IAAI,EAAC,MAArM;AAA4M,MAAA,KAAK,EAAExF,IAAI,CAACE,aAAxN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKzD,KAAL,CAAWc,MAAX,CAAkBiK,cAAlE;AAAkF,MAAA,KAAK,EAAC,mBAAxF;AAA4G,MAAA,aAAa,EAAC,OAA1H;AAAkI,MAAA,OAAO,EAAC,qBAA1I;AAA6J,MAAA,QAAQ,EAAE,KAAK/B,oBAA5K;AAAkM,MAAA,IAAI,EAAC,MAAvM;AAA8M,MAAA,KAAK,EAAEzF,IAAI,CAACG,cAA1N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAK1D,KAAL,CAAWc,MAAX,CAAkBkK,WAAlE;AAA+E,MAAA,KAAK,EAAC,wBAArF;AAA8G,MAAA,aAAa,EAAC,OAA5H;AAAoI,MAAA,OAAO,EAAC,qBAA5I;AAA+J,MAAA,QAAQ,EAAE,KAAK/B,YAA9K;AAA4L,MAAA,IAAI,EAAC,MAAjM;AAAwM,MAAA,KAAK,EAAE1F,IAAI,CAACL,SAApN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EASE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWc,MAAX,CAAkBmK,UAAlE;AAA8E,MAAA,KAAK,EAAC,QAApF;AAA6F,MAAA,aAAa,EAAC,OAA3G;AAAmH,MAAA,OAAO,EAAC,qBAA3H;AAA8I,MAAA,QAAQ,EAAE,KAAK/B,cAA7J;AAA6K,MAAA,IAAI,EAAC,MAAlL;AAAyL,MAAA,KAAK,EAAE3F,IAAI,CAACM,IAArM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAK7D,KAAL,CAAWc,MAAX,CAAkBoK,YAAlE;AAAgF,MAAA,KAAK,EAAC,SAAtF;AAAgG,MAAA,aAAa,EAAC,OAA9G;AAAsH,MAAA,OAAO,EAAC,qBAA9H;AAAiJ,MAAA,QAAQ,EAAE,KAAK/B,gBAAhK;AAAkL,MAAA,IAAI,EAAC,MAAvL;AAA8L,MAAA,KAAK,EAAE5F,IAAI,CAACO,MAA1M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAK9D,KAAL,CAAWc,MAAX,CAAkBqK,WAAlE;AAA+E,MAAA,KAAK,EAAC,QAArF;AAA8F,MAAA,aAAa,EAAC,OAA5G;AAAoH,MAAA,OAAO,EAAC,qBAA5H;AAA+I,MAAA,QAAQ,EAAE,KAAK/B,eAA9J;AAA+K,MAAA,IAAI,EAAC,MAApL;AAA2L,MAAA,KAAK,EAAE7F,IAAI,CAACrD,KAAvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWc,MAAX,CAAkBsK,YAAlE;AAAgF,MAAA,KAAK,EAAC,OAAtF;AAA8F,MAAA,aAAa,EAAC,OAA5G;AAAoH,MAAA,OAAO,EAAC,qBAA5H;AAA+I,MAAA,QAAQ,EAAE,KAAK/B,gBAA9J;AAAgL,MAAA,IAAI,EAAC,MAArL;AAA4L,MAAA,KAAK,EAAE9F,IAAI,CAACQ,MAAxM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CATF,EAeE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAK/D,KAAL,CAAWc,MAAX,CAAkBuK,YAAlE;AAAgF,MAAA,KAAK,EAAC,MAAtF;AAA6F,MAAA,aAAa,EAAC,OAA3G;AAAmH,MAAA,OAAO,EAAC,qBAA3H;AAA8I,MAAA,QAAQ,EAAE,KAAK/B,aAA7J;AAA4K,MAAA,IAAI,EAAC,MAAjL;AAAwL,MAAA,KAAK,EAAE/F,IAAI,CAACI,MAApM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,EAkBE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAK3D,KAAL,CAAWc,MAAX,CAAkBwK,WAAlE;AAA+E,MAAA,KAAK,EAAC,uBAArF;AAA0G,MAAA,aAAa,EAAC,OAAxH;AAAgI,MAAA,OAAO,EAAC,qBAAxI;AAA2J,MAAA,QAAQ,EAAE,KAAK/B,YAA1K;AAAwL,MAAA,IAAI,EAAC,MAA7L;AAAoM,MAAA,KAAK,EAAEhG,IAAI,CAACS,KAAhN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,EAqBE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,WAAW,EAAE,KAAKhE,KAAL,CAAWc,MAAX,CAAkByK,UAAlE;AAA8E,MAAA,KAAK,EAAC,OAApF;AAA4F,MAAA,aAAa,EAAC,OAA1G;AAAkH,MAAA,OAAO,EAAC,qBAA1H;AAA6I,MAAA,QAAQ,EAAE,KAAK/B,WAA5J;AAAyK,MAAA,IAAI,EAAC,MAA9K;AAAqL,MAAA,KAAK,EAAEjG,IAAI,CAACK,IAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArBF,CAPJ,EAiCG,KAAK5D,KAAL,CAAWc,MAAX,CAAkBW,QAAlB,KAA+B,OAA/B,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWuG,QAAX,KAAwB,MAAxB,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvG,KAAL,CAAWN,QAAX,CAAoB0K,GAApB,CAAwB,CAACtD,MAAD,EAAS5D,KAAT,KAAmB;AAC1C,aACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKqG,MAAL;AAAe,SADlC;AAEE,QAAA,QAAQ,EAAE,MAAM;AAAE,eAAKxJ,SAAL;AAAkB,SAFtC;AAGE,QAAA,KAAK,EAAEmD,KAHT;AAIE,QAAA,KAAK,EAAE4D,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,CADF,EAcE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKK,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAdF,CAFJ,EAqBG,KAAKnH,KAAL,CAAWuG,QAAX,KAAwB,KAAxB,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKmB,WAAnG;AAAgH,MAAA,IAAI,EAAC,MAArH;AAA4H,MAAA,KAAK,EAAC,QAAlI;AAA2I,MAAA,KAAK,EAAEV,KAAK,CAAC7H,aAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKyI,WAAnG;AAAgH,MAAA,IAAI,EAAC,MAArH;AAA4H,MAAA,KAAK,EAAC,QAAlI;AAA2I,MAAA,KAAK,EAAEZ,KAAK,CAAC/D,OAAN,CAAcU,IAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKkE,aAAnG;AAAkH,MAAA,IAAI,EAAC,MAAvH;AAA8H,MAAA,KAAK,EAAC,SAApI;AAA8I,MAAA,KAAK,EAAEb,KAAK,CAAC/D,OAAN,CAAcW,MAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKkE,YAAnG;AAAiH,MAAA,IAAI,EAAC,MAAtH;AAA6H,MAAA,KAAK,EAAC,QAAnI;AAA4I,MAAA,KAAK,EAAEd,KAAK,CAAC/D,OAAN,CAAcjD,KAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAK+H,aAAnG;AAAkH,MAAA,IAAI,EAAC,MAAvH;AAA8H,MAAA,KAAK,EAAC,OAApI;AAA4I,MAAA,KAAK,EAAEf,KAAK,CAAC/D,OAAN,CAAcY,MAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKmE,iBAAnG;AAAsH,MAAA,IAAI,EAAC,MAA3H;AAAkI,MAAA,KAAK,EAAC,WAAxI;AAAoJ,MAAA,KAAK,EAAEhB,KAAK,CAAC9H,UAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAK+I,UAAnG;AAA+G,MAAA,IAAI,EAAC,MAApH;AAA2H,MAAA,KAAK,EAAC,KAAjI;AAAuI,MAAA,KAAK,EAAEjB,KAAK,CAACzH,GAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAK2I,aAAnG;AAAkH,MAAA,IAAI,EAAC,MAAvH;AAA8H,MAAA,KAAK,EAAC,QAApI;AAA6I,MAAA,KAAK,EAAElB,KAAK,CAACxH,MAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAK2I,gBAAnG;AAAqH,MAAA,IAAI,EAAC,MAA1H;AAAiI,MAAA,KAAK,EAAC,kBAAvI;AAA0J,MAAA,KAAK,EAAEnB,KAAK,CAACvH,SAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAK2I,aAAnG;AAAkH,MAAA,IAAI,EAAC,MAAvH;AAA8H,MAAA,KAAK,EAAC,oBAApI;AAAyJ,MAAA,KAAK,EAAEpB,KAAK,CAAC5H,OAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKiJ,iBAAnG;AAAsH,MAAA,IAAI,EAAC,QAA3H;AAAoI,MAAA,KAAK,EAAC,QAA1I;AAAgJ,MAAA,KAAK,EAAErB,KAAK,CAAC1H,QAAN,CAAe,CAAf,CAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKgJ,mBAAnG;AAAwH,MAAA,IAAI,EAAC,QAA7H;AAAsI,MAAA,KAAK,EAAC,KAA5I;AAAkJ,MAAA,KAAK,EAAEtB,KAAK,CAAC1H,QAAN,CAAe,CAAf,CAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKiJ,kBAAnG;AAAuH,MAAA,IAAI,EAAC,QAA5H;AAAqI,MAAA,KAAK,EAAC,QAA3I;AAAiJ,MAAA,KAAK,EAAEvB,KAAK,CAAC1H,QAAN,CAAe,CAAf,CAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKkJ,gBAAnG;AAAqH,MAAA,IAAI,EAAC,QAA1H;AAAmI,MAAA,KAAK,EAAC,QAAzI;AAA+I,MAAA,KAAK,EAAExB,KAAK,CAAC3H,WAAN,CAAkB,CAAlB,CAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKoJ,kBAAnG;AAAuH,MAAA,IAAI,EAAC,QAA5H;AAAqI,MAAA,KAAK,EAAC,KAA3I;AAAiJ,MAAA,KAAK,EAAEzB,KAAK,CAAC3H,WAAN,CAAkB,CAAlB,CAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAC,YAAtB;AAAmC,MAAA,aAAa,EAAC,OAAjD;AAAyD,MAAA,OAAO,EAAC,qBAAjE;AAAoF,MAAA,QAAQ,EAAE,KAAKqJ,iBAAnG;AAAsH,MAAA,IAAI,EAAC,QAA3H;AAAoI,MAAA,KAAK,EAAC,QAA1I;AAAgJ,MAAA,KAAK,EAAE1B,KAAK,CAAC3H,WAAN,CAAkB,CAAlB,CAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF,EAmBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,SAArB;AAA+B,MAAA,WAAW,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAnBF,CAtBJ,CAlCJ,CAtDF,CADF;AA8ID;;AAt5BkC;;AAy5BrC,eAAeO,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  FaCheckCircle,\n  FaTrash,\n  FaCommentsDollar\n} from 'react-icons/fa'\nimport axios from 'axios'\nimport { Spinner, Modal } from 'reactstrap';\nimport Checkbox from './../Checkbox/Checkbox';\nimport InputForm from '../InputForm/InputForm';\nimport { ButtonOutline } from '../Button/Button'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nconst moralCopy = {\n  addrres: '',\n  activities: '',\n  business_name: '',\n  cap_reg: '',\n  last_update: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  first_op: {\n    0: '',\n    1: '',\n    2: ''\n  },\n  rfc: '',\n  status: '',\n  tradename: '',\n  entities: []\n}\nconst checkedCopy = [false, false, false, false, false]\n\nclass DocumentCard extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.checkCard = this.checkCard.bind(this)\n\n    this.inputRef = React.createRef();\n\n    this.state = {\n      image_event: '',\n      checkEntities: true,\n      image: '',\n      image_open: false,\n      spinner: 'd-none',\n      doc_type: '',\n      disabled: true,\n      num_activ: '',\n      doc_up: false,\n      comp_id: 0,\n      checked: [false, false, false, false, false],\n      documentsList: [{\n        image: '-ife',\n        documentType: 'INE',\n      }, {\n        image: '-license',\n        documentType: 'Licencia',\n      }, {\n        image: '-passport',\n        documentType: 'Pasaporte'\n      }, {\n        image: '-acta',\n        documentType: 'Acta',\n      }, {\n        image: '-rfc',\n        documentType: 'RFC'\n      }],\n      file: '',\n      pdf: false,\n      info: false,\n      // Data for physical person\n      user: {\n        name: '',\n        first_surname: '',\n        second_surname: '',\n        city: '',\n        colony: '',\n        state: '',\n        street: '',\n        gender: '',\n        clave: '',\n        curp: '',\n        birthdate: ''\n      },\n      // Data for moral person\n      moral: {\n        addrres: {\n          city: '',\n          colony: '',\n          state: '',\n          street: '',\n          zip: ''\n        },\n        activities: '',\n        business_name: '',\n        cap_reg: '',\n        last_update: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        first_op: {\n          0: '',\n          1: '',\n          2: ''\n        },\n        rfc: '',\n        status: '',\n        tradename: ''\n      },\n      entities: []\n    }\n  }\n\n  _setState = (state) => {\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    this.setState({ comp_id: this.props.id })\n  }\n\n  componentDidUpdate() {\n    if (this.props.params.replace && this.props.params.active === this.state.comp_id) {\n      this.props.setState({ replace: false })\n\n      this.setState({\n        doc_up: false,\n        checked: checkedCopy,\n        image: ''\n      }, () => {\n        this.loadFileToBase64(this.state.image_event)\n\n      })\n    }\n  }\n\n  // Obtener archivo de identificación\n  loadFileToBase64 = (event) => {\n\n    let file\n    try {\n      file = event.target.files[0];\n    } catch {\n      file = event\n    }\n    let pdf = file.type === 'application/pdf'\n\n    this.setState({ image_event: file })\n\n\n    if (file.size < 14400 && !pdf) {\n      // alert('Por favor suba una imagen con dimensiones mayores a 120 x 120')\n      this.props.setState({\n        modal: !this.props.params.modal,\n        active: this.state.comp_id\n      })\n    }\n    else if (this.state.doc_up) {\n      // alert('Por favor borre el documento antes de subir otro')\n\n      this.props.setState({\n        modal_up: !this.props.params.modal_up,\n        active: this.state.comp_id\n      })\n    }\n    else {\n      this.reader = new FileReader();\n      this.reader.readAsDataURL(file);\n      this.reader.onloadend = () => {\n        var image = new FormData()\n\n        if (this.props.params.per_type === 'fisica') {\n          image.append('image', file)\n          image.append('pdf', pdf)\n        }\n        else {\n          image.append('pdf', file)\n        }\n        console.log(\"IMAGE\", image)\n        this.setState({\n          file: image,\n          doc_up: true,\n          pdf,\n          spinner: '',\n          image: this.reader.result\n\n        }, () => {\n\n          this.uploadFile();\n\n        });\n      }\n    }\n  }\n\n  uploadFile = () => {\n\n    if (localStorage.getItem(\"id_token\")) {\n\n      let url\n      // let res\n\n      if (this.props.params.per_type === 'fisica') {\n        url = API_URL + '/api/v1/get_url/search'\n      }\n      else if (this.props.params.per_type === 'moral') {\n        url = API_URL + '/api/v1/read_acts/search'\n      }\n\n      axios({\n        method: 'POST',\n        url,\n        data: this.state.file,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\n      }).then((res) => {\n        this.setState({\n          spinner: 'd-none',\n          comp_name: true\n        })\n\n        if (this.props.params.per_type === 'fisica') {\n\n          let type_img = res['data']['type_img']\n\n          let data = res['data']['data_text']\n\n          if (data === 'Documento no identificado') {\n            this.inputRef.current.value = \"\"\n            this.setState({\n              doc_up: false\n            }, () => {\n              this.props.setState({\n                modal: !this.props.params.modal\n              })\n            })\n          }\n          else if(data === 'Documento en mala posicion'){\n            this.inputRef.current.value = \"\"\n            this.setState({\n              doc_up: false\n            }, () => {\n              this.props.setState({\n                modal_pos: !this.props.params.modal_pos\n              })\n            })\n          }\n          else if (type_img === this.props.params.up_1 || type_img === this.props.params.up_2) {\n\n            this.props.setState({\n              modal_del: !this.props.params.modal_del\n            })\n\n          }\n          else {\n            const birthdate = data['birthdate']\n            const address = data['address']\n\n            // Check type of document\n            var index\n            if (res['data']['type_img'] === 'ine') {\n              index = 0;\n            }\n            else if (res['data']['type_img'] === 'licencia') {\n              index = 1;\n            }\n            else {\n              index = 2;\n            }\n\n            // Set checked document\n            const copyChecked = []\n            copyChecked.concat(checkedCopy)\n            copyChecked[index] = true;\n\n            // Set user info\n            this.setState({\n              user: {\n                name: data['name']['first_name'],\n                first_surname: data['name']['first_surname'],\n                second_surname: data['name']['second_surname'],\n                birthdate: birthdate[0] + \"-\" + birthdate[1] + \"-\" + birthdate[2],\n                gender: data['sex'],\n                curp: data['curp'],\n                city: address['city'],\n                colony: address['colony'],\n                state: address['state'],\n                street: address['street'],\n                clave: data['id_card']\n              },\n              checked: copyChecked,\n              disabled: false,\n              num_activ: '-active'\n            }, () => {\n\n              this.onClick()\n\n              if (this.state.comp_id === 0) {\n                this.props.checkContinue(this.state.user)\n                this.props.setState({\n                  img_1: res['data']['img_name'],\n                  name_1: this.state.user.name,\n                  first_surname_1: this.state.user.first_surname,\n                  second_surname_1: this.state.user.second_surname,\n                  birthdate_1: this.state.user.birthdate,\n                  curp_1: this.state.user.curp,\n                  up_1: type_img,\n                  clave_1: this.state.user.clave,\n                  gender_1: this.state.user.gender,\n                  city_1: this.state.user.city,\n                  colony_1: this.state.user.colony,\n                  state_1: this.state.user.state,\n                  street_1: this.state.user.street,\n                  comp: true,\n                })\n              } else if (this.state.comp_id === 1) {\n                this.props.setState({\n                  img_2: res['data']['img_name'],\n                  name_2: this.state.user.name,\n                  first_surname_2: this.state.user.first_surname,\n                  second_surname_2: this.state.user.second_surname,\n                  birthdate_2: this.state.user.birthdate,\n                  curp_2: this.state.user.curp,\n                  up_2: type_img,\n                  clave_2: this.state.user.clave,\n                  gender_2: this.state.user.gender,\n                  city_2: this.state.user.city,\n                  colony_2: this.state.user.colony,\n                  state_2: this.state.user.state,\n                  street_2: this.state.user.street,\n                  comp_name: true,\n                  comp_surname1: true,\n                  comp_surname2: true,\n                  comp_birth: true,\n                  comp_city: true,\n                  comp_colony: true,\n                  comp_state: true,\n                  comp_street: true,\n                  comp_gender: true,\n                  comp_clave: true,\n                  comp_curp: true,\n                })\n              }\n            })\n          }\n        }\n        else {\n\n          let data = res['data']\n\n          let doc_type = data['type']\n\n          this.setState({\n            doc_type\n          })\n\n          if (this.props.params.last_moral_up === doc_type) {\n            alert('Hay que subir un archivo diferente la anterior')\n            this.setState({\n              doc_up: false\n            })\n          }\n          else {\n            this.props.setState({\n              last_moral_up: doc_type\n            })\n\n            if (doc_type === 'acta') {\n\n              const copyChecked = []\n              copyChecked.concat(checkedCopy)\n              copyChecked[3] = true;\n              const data_length = data['entities'].length\n\n              let entities_json = []\n\n              for (let i = 0; i < data_length; i++) {\n                let entity = [\n                  data['entities'][i],\n                  '',\n                  false\n                ]\n                entities_json.push(entity)\n              }\n              this.setState({\n                entities: entities_json,\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick()\n              })\n            }\n            else {\n\n              const copyChecked = []\n              copyChecked.concat(checkedCopy)\n              copyChecked[4] = true;\n\n              this.setState({\n                moral: {\n                  activities: data['activities'][0]['activity'],\n                  address: {\n                    city: data['address']['city'],\n                    colony: data['address']['colony'],\n                    state: data['address']['state'],\n                    street: data['address']['street'],\n                    zip: data['address']['zip']\n                  },\n                  business_name: data['business_name'],\n                  cap_reg: data['capital_regime'],\n                  last_update: data['last_date_of_change'],\n                  rfc: data['rfc'],\n                  first_op: data['start_date_of_operations'],\n                  status: data['status'],\n                  tradename: data['tradename']\n                },\n                checked: copyChecked,\n                disabled: false,\n                num_activ: '-active'\n              }, () => {\n                this.onClick()\n                this.props.setState({\n                  moral: {\n                    activities: data['activities'][0]['activity'],\n                    address: {\n                      city: data['address']['city'],\n                      colony: data['address']['colony'],\n                      state: data['address']['state'],\n                      street: data['address']['street'],\n                      zip: data['address']['zip']\n                    },\n                    business_name: data['business_name'],\n                    cap_reg: data['capital_regime'],\n                    last_update: data['last_date_of_change'],\n                    rfc: data['rfc'],\n                    first_op: data['start_date_of_operations'],\n                    status: data['status'],\n                    tradename: data['tradename']\n                  }\n                })\n              })\n            }\n          }\n\n        }\n      })\n    } else {\n      alert('Token error')\n    }\n  }\n\n  checkCard(index) {\n    const checked = this.state.checked.map((checkbox, i) => {\n      if (i === index) {\n        return !checkbox\n      } else {\n        return false\n      }\n    })\n    this.setState({\n      checked,\n    })\n  }\n\n  onClick = () => {\n    this.setState({\n      info: true,\n      spinner: 'd-none'\n    });\n  }\n\n  saveData = () => {\n    let entities_true = []\n\n    this.state.entities.forEach(function (element) {\n      if (element[2]) {\n        entities_true.push(element)\n      }\n    })\n\n    this.props.setState({\n      entities: entities_true\n    })\n\n  }\n\n  deleteDoc = () => {\n    this.setState({\n      doc_up: false,\n      checked: checkedCopy,\n      image: ''\n    })\n    this.inputRef.current.value = \"\"\n  }\n\n  deleteForm = () => {\n    this.setState({\n      user: { name: '', first_surname: '', second_surname: '', city: '', colony: '', state: '', street: '', gender: '', clave: '', curp: '', birthdate: '' },\n      moral: moralCopy,\n      disabled: true,\n    }, () => {\n      if (this.state.comp_id === 0 && this.props.params.per_type === 'fisica') {\n\n        this.props.setState({\n          comp: true,\n          continue: 'disabled',\n          img_1: '',\n          up_1: '',\n          curp_1: '',\n          name_1: '',\n          first_surname_1: '',\n          second_surname_1: '',\n          birthdate_1: '',\n          gender_1: '',\n          comp_name: true,\n          comp_surname1: true,\n          comp_surname2: true,\n          comp_birth: true,\n          comp_city: true,\n          comp_colony: true,\n          comp_state: true,\n          comp_street: true,\n          comp_gender: true,\n          comp_clave: true,\n          comp_curp: true,\n        })\n      }\n      else if (this.state.comp_id === 1 && this.props.params.per_type === 'fisica') {\n        this.props.setState({\n          comp: true,\n          img_2: '',\n          up_2: '',\n          curp_2: '',\n          name_2: '',\n          first_surname_2: '',\n          second_surname_2: '',\n          birthdate_2: '',\n          gender_2: '',\n          comp_name: true,\n          comp_surname1: true,\n          comp_surname2: true,\n          comp_birth: true,\n          comp_city: true,\n          comp_colony: true,\n          comp_state: true,\n          comp_street: true,\n          comp_gender: true,\n          comp_clave: true,\n          comp_curp: true,\n        })\n      } else {\n        this.props.setState({\n          last_moral_up: '',\n        })\n      }\n    });\n  }\n\n  handlerName = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['business_name'] = event.target.value\n    this.setState({ moral: temp_moral }, () => {\n      this.props.setState({ moral: temp_moral })\n    })\n  }\n\n  handlerCity = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"city\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerColony = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"colony\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerState = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"state\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerStreet = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral['address'][\"street\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerActivities = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"activities\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerRFC = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"rfc\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerStatus = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"status\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerTradename = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"tradename\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerCapReg = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"cap_reg\"] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegDay = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][0] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegMonth = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][1] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerDateRegYear = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"first_op\"][2] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegDay = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][0] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegMonth = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][1] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerUpdRegYear = (event) => {\n    let temp_moral = this.state.moral\n    temp_moral[\"last_update\"][2] = event.target.value\n    this.setState({ moral: temp_moral }, () => { this.props.setState({ moral: temp_moral }) })\n  }\n\n  handlerPerName = (event) => {\n    let temp_user = this.state.user\n    temp_user['name'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ name_1: this.state.user.name, comp_name: true, comp: true })\n      } else {\n        this.props.setState({ name_2: this.state.user.name, comp_name: true, comp: true })\n      }\n    })\n  }\n\n  handlerFisrSurname = (event) => {\n    let temp_user = this.state.user\n    temp_user['first_surname'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ first_surname_1: this.state.user.first_surname, comp_surname1: true, comp: true })\n      }\n      else {\n        this.props.setState({ first_surname_2: this.state.user.first_surname, comp_surname1: true, comp: true })\n      }\n    })\n  }\n\n  handlerSecondSurname = (event) => {\n    let temp_user = this.state.user\n    temp_user['second_surname'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ second_surname_1: this.state.user.second_surname, comp_surname2: true, comp: true })\n      }\n      else {\n        this.props.setState({ second_surname_2: this.state.user.second_surname, comp_surname2: true, comp: true })\n      }\n    })\n  }\n\n  handlerBirth = (event) => {\n    let temp_user = this.state.user\n    temp_user['birthdate'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ birthdate_1: this.state.user.birthdate, comp_birth: true, comp: true })\n      }\n      else {\n        this.props.setState({ birthdate_2: this.state.user.birthdate, comp_birth: true, comp: true })\n      }\n    })\n  }\n\n  handlerPerCity = (event) => {\n    let temp_user = this.state.user\n    temp_user['city'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ city_1: this.state.user.city, comp_city: true, comp: true })\n      }\n      else {\n        this.props.setState({ city_2: this.state.user.city, comp_city: true, comp: true })\n      }\n    })\n  }\n\n  handlerPerColony = (event) => {\n    let temp_user = this.state.user\n    temp_user['colony'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ colony_1: this.state.user.colony, comp_colony: true, comp: true })\n      }\n      else {\n        this.props.setState({ colony_2: this.state.user.colony, comp_colony: true, comp: true })\n      }\n    })\n  }\n  handlerPerState = (event) => {\n    let temp_user = this.state.user\n    temp_user['state'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ state_1: this.state.user.state, comp_state: true, comp: true })\n      }\n      else {\n        this.props.setState({ state_2: this.state.user.state, comp_state: true, comp: true })\n      }\n    })\n  }\n  handlerPerStreet = (event) => {\n    let temp_user = this.state.user\n    temp_user['street'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ street_1: this.state.user.street, comp_street: true, comp: true })\n      }\n      else {\n        this.props.setState({ street_2: this.state.user.street, comp_street: true, comp: true })\n      }\n    })\n  }\n\n  handlerGender = (event) => {\n    let temp_user = this.state.user\n    temp_user['gender'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ gender_1: this.state.user.gender, comp_gender: true, comp: true })\n      }\n      else {\n        this.props.setState({ gender_2: this.state.user.gender, comp_gender: true, comp: true })\n      }\n    })\n  }\n\n  handlerClave = (event) => {\n    let temp_user = this.state.user\n    temp_user['clave'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ clave_1: this.state.user.clave, comp_clave: true, comp: true })\n      }\n      else {\n        this.props.setState({ clave_2: this.state.user.clave, comp_clave: true, comp: true })\n      }\n    })\n  }\n\n  handlerCURP = (event) => {\n    let temp_user = this.state.user\n    temp_user['curp'] = event.target.value\n    this.setState({ user: temp_user }, () => {\n      if (this.state.comp_id === 0) {\n        this.props.setState({ curp_1: this.state.user.curp, comp_curp: true, comp: true })\n      }\n      else {\n        this.props.setState({ curp_2: this.state.user.curp, comp_curp: true, comp: true })\n      }\n    })\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      image_open: !prevState.image_open\n    }));\n  }\n\n  render() {\n    const { user } = this.state\n    const { moral } = this.state\n    return (\n      <div>\n        <Modal isOpen={this.state.image_open} toggle={this.toggle}>\n          <img src={this.state.image} height=\"100%\" width=\"100%\" onClick={this.toggle}></img>\n        </Modal>\n        <div className={`document-card ${this.props.customClasses}`}>\n          <div className={\"spinnermodal \" + this.state.spinner}>\n            <Spinner style={{ width: '2rem', height: '2rem' }} />{' '}\n          </div>\n          <div className=\"datawrapper\">\n            <button onClick={this.deleteDoc} className=\"fa-btn ml-auto\">\n              <FaTrash />\n            </button>\n          </div>\n          <p className=\"subtitle\">Carga tu archivo a reconocer, puede ser {this.props.params.per_type === 'fisica' && <b> INE, IFE, Licencia o Pasaporte</b>}\n            {this.props.params.per_type === 'moral' && <b> Acta Constitutiva o RFC</b>}</p>\n          <input onChange={this.loadFileToBase64} ref={this.inputRef} type=\"file\" accept=\".jpg, .jpeg, .png, .tiff, .bmp, .gif, .pdf\" className=\"select-file\" />\n          <form action=\"\">\n            <div className=\"select-document-form flex-column flex-md-row mt-30\">\n              {\n                this.state.documentsList.map((type, index) => {\n                  return (\n\n                    <React.Fragment>\n                      {this.state.checked[index] &&\n                        <div key={`document-card-${index}-${this.state.comp_id}`} className={`documentwrapper ${this.state.checked[index] ? '-selected' : ''}`}>\n\n                          <input checked={this.state.checked[index]} onChange={() => this.checkCard(index)} className=\"radio\" type=\"checkbox\" disabled />\n                          <div className=\"checked\">\n                            <FaCheckCircle />\n                          </div>\n\n                          <div className={`documenttype ${type.image}`}></div>\n                          <p className=\"text-center\">{type.documentType}</p>\n                        </div>\n                      }\n                    </React.Fragment>\n                  )\n                })\n              }\n              {!this.state.pdf &&\n                <React.Fragment>\n                  {this.state.doc_up &&\n                    <div style={{ marginRight: \"80px\" }}>\n                      <p><b>Abrir vista previa</b></p>\n                      <img src={this.state.image} position=\"center\" className=\"datawrapper flex-column\" height=\"100px\" onClick={this.toggle} />\n                    </div>\n                  }\n                </React.Fragment>\n              }\n            </div>\n          </form>\n        </div>\n\n\n        <div className=\"document-card -light -border\">\n          <div className=\"datawrapper\">\n            <button onClick={this.deleteForm} className=\"fa-btn ml-auto\">\n              <FaTrash />\n            </button>\n          </div>\n          {this.props.params.per_type === 'fisica' &&\n            <React.Fragment>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.name_color} label=\"Nombre(s)*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerName} type=\"text\" value={user.name} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.surname1_color} label=\"Apellido Paterno*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerFisrSurname} type=\"text\" value={user.first_surname} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.surname2_color} label=\"Apellido Materno*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerSecondSurname} type=\"text\" value={user.second_surname} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.birth_color} label=\"Nacimiento* DD-MM-AAAA\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerBirth} type=\"text\" value={user.birthdate} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.city_color} label=\"Ciudad\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerCity} type=\"text\" value={user.city} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.colony_color} label=\"Colonia\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerColony} type=\"text\" value={user.colony} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.state_color} label=\"Estado\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerState} type=\"text\" value={user.state} />\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.street_color} label=\"Calle\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerPerStreet} type=\"text\" value={user.street} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.gender_color} label=\"Sexo\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerGender} type=\"text\" value={user.gender} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.clave_color} label=\"No. identificación\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerClave} type=\"text\" value={user.clave} />\n              </div>\n              <div className=\"datawrapper flex-column\">\n                <InputForm inputColor=\"-secondary\" borderColor={this.props.params.curp_color} label=\"CURP*\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCURP} type=\"text\" value={user.curp} />\n              </div>\n            </React.Fragment>\n          }\n          {this.props.params.per_type === 'moral' &&\n            <React.Fragment>\n              {this.state.doc_type === 'acta' &&\n                <React.Fragment>\n                  <form action=\"\">\n                    {this.state.entities.map((entity, index) => {\n                      return (\n                        <Checkbox\n                          onClick={() => { this.toggle() }}\n                          setState={() => { this._setState() }}\n                          index={index}\n                          value={entity}\n                        />\n                      )\n                    })\n                    }\n                  </form>\n                  <div className=\"col-12 px-0\">\n                    <button className=\"button -outline\" onClick={this.saveData}>GUARDAR</button>\n                  </div>\n                </React.Fragment>\n              }\n              {this.state.doc_type === 'rfc' &&\n                <React.Fragment>\n                  <div className=\"datawrapper flex-column\">\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerName} type=\"text\" label=\"Nombre\" value={moral.business_name} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCity} type=\"text\" label=\"Ciudad\" value={moral.address.city} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerColony} type=\"text\" label=\"Colonia\" value={moral.address.colony} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerState} type=\"text\" label=\"Estado\" value={moral.address.state} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerStreet} type=\"text\" label=\"Calle\" value={moral.address.street} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerActivities} type=\"text\" label=\"Actividad\" value={moral.activities} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerRFC} type=\"text\" label=\"RFC\" value={moral.rfc} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerStatus} type=\"text\" label=\"Estado\" value={moral.status} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerTradename} type=\"text\" label=\"Nombre comercial\" value={moral.tradename} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerCapReg} type=\"text\" label=\"Regimen de Capital\" value={moral.cap_reg} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegDay} type=\"number\" label=\"Día\" value={moral.first_op[0]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegMonth} type=\"number\" label=\"Mes\" value={moral.first_op[1]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerDateRegYear} type=\"number\" label=\"Año\" value={moral.first_op[2]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegDay} type=\"number\" label=\"Día\" value={moral.last_update[0]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegMonth} type=\"number\" label=\"Mes\" value={moral.last_update[1]} />\n                    <InputForm inputColor=\"-secondary\" customClasses=\"mt-50\" warning=\"Datos no válidos\" onChange={this.handlerUpdRegYear} type=\"number\" label=\"Año\" value={moral.last_update[2]} />\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <ButtonOutline title=\"GUARDAR\" customClass=\"mt-30\" />\n                    </div>\n                  </div>\n                </React.Fragment>\n              }\n            </React.Fragment>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DocumentCard\n"]},"metadata":{},"sourceType":"module"}