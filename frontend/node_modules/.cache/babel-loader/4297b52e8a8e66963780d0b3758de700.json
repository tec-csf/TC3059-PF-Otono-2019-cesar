{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/Modal/Modal.jsx\";\nimport React from 'react';\nimport { Button, Spinner, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport InputForm from '../../components/InputForm/InputForm';\nimport { ButtonPrimary } from '../../components/Button/Button';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass CmModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      this.props.setState({\n        showModal: false\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      if (this.props.show && !this.state.modal) {\n        this.toggle();\n      }\n    };\n\n    this.handlerAccount = event => {\n      this.setState({\n        account: event.target.value\n      });\n    };\n\n    this.onClick = () => {\n      let url = API_URL + '/api/v1/social/upload';\n      this.setState({\n        spinner: ''\n      });\n      axios({\n        method: 'POST',\n        url,\n        data: {\n          twitter_account: [this.state.account],\n          rfc: this.props.rfc,\n          type: this.props.type,\n          user_id: [jwtDecode(localStorage.getItem(\"id_token\")).sub]\n        },\n        config: {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      }).then(res => {\n        this.setState(prevState => ({\n          modal: !prevState.modal,\n          spinner: 'd-none'\n        }));\n        this.props.setState({\n          showModal: false\n        });\n        window.location.reload();\n      });\n    };\n\n    this.state = {\n      modal: false,\n      account: '',\n      spinner: 'd-none'\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  render() {\n    switch (this.props.modalType) {\n      case 'twitter':\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          isOpen: this.state.modal,\n          toggle: this.toggle,\n          className: this.props.className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"spinnermodal \" + this.state.spinner,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          style: {\n            width: '2rem',\n            height: '2rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), ' '), React.createElement(ModalHeader, {\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.props.modalTitle), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(InputForm, {\n          inputColor: \"-secondary\",\n          customClasses: \"mt-50\",\n          warning: \"Cuenta no v\\xE1lida\",\n          type: \"text\",\n          label: \"Cuenta de twitter\",\n          placeholder: \"ej: @nombreDeCuenta\",\n          value: this.state.account,\n          onChange: this.handlerAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(ButtonPrimary, {\n          onClick: this.onClick,\n          title: \"A\\xF1adir cuenta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }))));\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          isOpen: this.state.modal,\n          toggle: this.toggle,\n          className: this.props.className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.props.modalTitle), React.createElement(ModalBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        })));\n    }\n  }\n\n}\n\nexport default CmModal;","map":{"version":3,"sources":["/home/cesar/Desktop/Riesgo_Cognitivo/frontend/src/components/Modal/Modal.jsx"],"names":["React","Button","Spinner","Modal","ModalHeader","ModalBody","ModalFooter","InputForm","ButtonPrimary","axios","jwtDecode","API_URL","process","env","REACT_APP_API_URL","CmModal","Component","constructor","props","toggle","setState","prevState","modal","showModal","componentDidUpdate","show","state","handlerAccount","event","account","target","value","onClick","url","spinner","method","data","twitter_account","rfc","type","user_id","localStorage","getItem","sub","config","headers","then","res","window","location","reload","bind","render","modalType","className","width","height","modalTitle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Spinner,Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport InputForm from '../../components/InputForm/InputForm'\nimport { ButtonPrimary } from '../../components/Button/Button'\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass CmModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      account: '', \n      spinner: 'd-none'\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.setState({showModal: false})\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.show && !this.state.modal) {\n      this.toggle()\n    }\n  }\n\n  handlerAccount = (event) =>{\n    this.setState({\n      account: event.target.value\n    })\n  }\n\n  onClick = () =>{\n\n    let url = API_URL + '/api/v1/social/upload'\n\n    this.setState({\n      spinner:''\n    })\n    axios({                                                         \n      method:'POST',                                                    \n      url,                                                           \n      data: {\n        twitter_account:[this.state.account],\n        rfc: this.props.rfc,\n        type: this.props.type,\n        user_id: [jwtDecode(localStorage.getItem(\"id_token\")).sub]\n      },                                        \n      config: {headers: {'Content-Type': 'multipart/form-data'}}    \n    }).then((res) => {\n      this.setState(prevState => ({\n        modal: !prevState.modal, \n        spinner:'d-none'\n      }));\n      this.props.setState({showModal: false})\n      window.location.reload()\n    })\n  }\n\n  render() {\n    switch(this.props.modalType) {\n      case 'twitter':\n        return (\n          <div>\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                <div className={\"spinnermodal \"+ this.state.spinner}>\n                  <Spinner style={{ width: '2rem', height: '2rem' }} />{' '}\n                </div> \n              <ModalHeader toggle={this.toggle}>{this.props.modalTitle}</ModalHeader>\n              <ModalBody>\n                   \n                <InputForm \n                  inputColor=\"-secondary\" \n                  customClasses=\"mt-50\" \n                  warning=\"Cuenta no válida\" \n                  type=\"text\" \n                  label=\"Cuenta de twitter\"\n                  placeholder='ej: @nombreDeCuenta'\n                  value={this.state.account}\n                  onChange={this.handlerAccount}\n                />\n              </ModalBody>\n              <ModalFooter>            \n                <ButtonPrimary\n                  onClick={this.onClick}\n                  title='Añadir cuenta'                  \n                />\n              </ModalFooter>\n            </Modal>\n          </div>\n        );\n\n      default :\n        return (\n          <div>           \n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n            \n              <ModalHeader toggle={this.toggle}>{this.props.modalTitle}</ModalHeader>\n              <ModalBody> \n                         \n              </ModalBody>\n              <ModalFooter>            \n              </ModalFooter>\n            </Modal>\n          </div>\n        );\n    }\n  }\n}\n\nexport default CmModal;"]},"metadata":{},"sourceType":"module"}